0000-                  2          ;------------------------------------------------------------------------
0000-                  3          ;
0000-                  4          ;  A1VIDEO.ASM
0000-                  5          ;
0000-                  6          ;  Video controller software for the Achatz A-One
0000-                  7          ;  Runs on an Atmel AtMega32 @ 16MHz (doc2503.pfd)
0000-                  8          ;
0000-                  9          ;
0000-                 10          ;  Author: San Bergmans
0000-                 11          ;  wwww.sbprojects.net
0000-                 12          ;
0000-                 13          ;------------------------------------------------------------------------
0000-                 14
0000-                 15                          .CR     AVR
0000-                 16                          .FA     MEGA
0000-                 17                          .TF     a1video.hex,INT,32
0000-                 18
0000-                 19          ;------------------------------------------------------------------------
0000-                 20          ;  Constants
0000-                 21          ;------------------------------------------------------------------------
0000-                 22
007F-                 23          PER50           .EQ     127             # of clock periods for 50Hz Hsync
007E-                 24          PER60           .EQ     126             # of clock periods for 60Hz Hsync
0138-                 25          LINES_50HZ      .EQ     312             # of lines in a 50Hz frame
0106-                 26          LINES_60HZ      .EQ     262             # of lines in a 60Hz frame
0028-                 27          LINES_TOP50     .EQ     40              # of empty lines above pic (50Hz)
001A-                 28          LINES_TOP60     .EQ     26              # of empty lines above pic (60Hz)
0003-                 29          LINES_INT50     .EQ     3               # of lines between text (50Hz)
0002-                 30          LINES_INT60     .EQ     2               # of lines between text (60Hz)
0000-                 31
0001-                 32          CTRLL_OPT       .EQ     1       or 0    Ctrl-L = Clear screen option
0000-                 33
0000-                 34
00F0-                 35          TEMP_LINES      .SE     7+LINES_INT50*24  Number of lines for text zone
0019-                 36          LINES_BTM50     .EQ     LINES_50HZ-7-LINES_TOP50-TEMP_LINES
0000-                 37
00D8-                 38          TEMP_LINES      .SE     7+LINES_INT60*24
000D-                 39          LINES_BTM60     .EQ     LINES_60HZ-7-LINES_TOP60-TEMP_LINES
0000-                 40
0000-             S   41                          .DO     LINES_BTM50>LINES_50HZ
0000-             S   42                          .ER     Too many lines for 50Hz system
0000-                 43                          .FI
0000-             S   44                          .DO     LINES_BTM60>LINES_60HZ
0000-             S   45                          .ER     Too many lines for 60Hz system
0000-                 46                          .FI
0000-                 47
0040-                 48          CURSOR          .EQ     '@'             Cursor character
0010-                 49          CURSOR_RLD      .EQ     16              Cursor reload timer value
000C-                 50          CTRLL           .EQ     $0C             Ctrl-L
000D-                 51          CR              .EQ     $0D             Carriage return
0028-                 52          LINE_LEN        .EQ     40              Characters per line
0018-                 53          LINE_MAX        .EQ     24              Lines per screen
0000-                 54
0000-                 55
0000-                 56          ;------------------------------------------------------------------------
0000-                 57          ;  Variables
0000-                 58          ;------------------------------------------------------------------------
0000-                 59
0000-                 60          DELAY           .SE     0               Used to calculate Hsync length
0000-                 61
0000-                 62
0000-                 63          ;------------------------------------------------------------------------
0000-                 64          ;  Registers
0000-                 65          ;------------------------------------------------------------------------
0000-                 66
0000-                 67          ZERO            .EQ     0               This register always holds 0
0001-                 68          STANDARD        .EQ     1               50Hz = 1, 60Hz = 0
0002-                 69          TTY_DELAY       .EQ     2               Timer for artificial TTY delay
0003-                 70          TOPCOUNT        .EQ     3               Number of lines at screen top
0004-                 71          INTCOUNT        .EQ     4               Number of lines between text
0005-                 72          BTMCOUNT        .EQ     5               Number of lines at bottom of scrn
0006-                 73          FIRST_LINE      .EQ     6               First line of screen (scroll)
0007-                 74          SCAN_LINE       .EQ     7               Current text scan line
0008-                 75          LINE_CNTR       .EQ     8               State machine's line counter
0009-                 76          TTY_STATE       .EQ     9               Next TTY state
000A-                 77          CH              .EQ     10              Horizontal cursor position
000B-                 78          CV              .EQ     11              Vertical cursor position
000C-                 79          CURSOR_TMR      .EQ     12              Cursor timer
000D-                 80          CURSOR_CHR      .EQ     13              Original character under cursor
000E-                 81          SUB_STATE       .EQ     14              Used for CLS and scroll
000F-                 82          SPLASH_FLAG     .EQ     15              Splash screen already shown ($5A)
0000-                 83
0010-                 84          ACCA            .EQ     16              Accu A register
0011-                 85          ACCB            .EQ     17              Accu B register
0018-                 86          SOUT_HEAD       .EQ     24              Serial output buffer head pntr
0019-                 87          SOUT_TAIL       .EQ     25              Serial output buffer tail pntr
001A-                 88          X               .EQ     26,27           X Register pair
001C-                 89          Y               .EQ     28,29           Y Register pair
001E-                 90          Z               .EQ     30,31           Z Register pair
0000-                 91
0000-                 92
0000-                 93          ;------------------------------------------------------------------------
0000-                 94          ;  I/O Space
0000-                 95          ;------------------------------------------------------------------------
0000-                 96
0000-                 97          TWBR            .EQ     $00             Two-wire Serial bit rate
0001-                 98          TWSR            .EQ     $01             Two-wire Status register
0002-                 99          TWAR            .EQ     $02             Two-wire Address register
0003-                100          TWDR            .EQ     $03             Two-wire Data register
0004-                101          ADCL            .EQ     $04             ADC data register low
0005-                102          ADCH            .EQ     $05             ADC data register high
0006-                103          ADCSRA          .EQ     $06             ADC control and status A
0007-                104          ADMUX           .EQ     $07             ADC multiplexer selection
0008-                105          ACSR            .EQ     $08             Analog comparator control
0009-                106          UBRRL           .EQ     $09             USART Baud rate register L
000A-                107          UCSRB           .EQ     $0A             USART control & status B
000B-                108          UCSRA           .EQ     $0B             USART control & status A
000C-                109          UDR             .EQ     $0C             USART I/O Data register
000D-                110          SPCR            .EQ     $0D             SPI control register
000E-                111          SPSR            .EQ     $0E             SPI status register
000F-                112          SPDR            .EQ     $0F             SPI Data register
0010-                113          PIND            .EQ     $10             Port D Input register
0011-                114          DDRD            .EQ     $11             Port D Data direction register
0012-                115          PORTD           .EQ     $12             Port D Output register
0013-                116          PINC            .EQ     $13             Port C Input register
0014-                117          DDRC            .EQ     $14             Port C Data direction register
0015-                118          PORTC           .EQ     $15             Port C Output register
0016-                119          PINB            .EQ     $16             Port B Input register
0017-                120          DDRB            .EQ     $17             Port B Data direction register
0018-                121          PORTB           .EQ     $18             Port B Output register
0019-                122          PINA            .EQ     $19             Port A Input register
001A-                123          DDRA            .EQ     $1A             Port A Data direction register
001B-                124          PORTA           .EQ     $1B             Port A Output register
001C-                125          EECR            .EQ     $1C             EEPROM control register
001D-                126          EEDR            .EQ     $1D             EEPROM data register
001E-                127          EEARL           .EQ     $1E             EEPROM address register L
001F-                128          EEARH           .EQ     $1F             EEPROM address register H
0020-                129          UBRRH           .EQ     $20             USART Baud rate register H
0020-                130          UCSRC           .EQ     $20             USART control & status register C
0021-                131          WDTCR           .EQ     $21             Watchdog Timer Control
0022-                132          ASSR            .EQ     $22             Asynchronous status register
0023-                133          OCR2            .EQ     $23             Timer/Counter2 Output compare
0024-                134          TCNT2           .EQ     $24             Timer/Counter2 (8 bits)
0025-                135          TCCR2           .EQ     $25             Timer/Counter2 Control register
0026-                136          ICR1L           .EQ     $26             Timer/Counter1 Input compare L
0027-                137          ICR1H           .EQ     $27             Timer/Counter1 Input compare H
0028-                138          OCR1BL          .EQ     $28             Timer/Counter1 Output compare BL
0029-                139          OCR1BH          .EQ     $29             Timer/Counter1 Output compare BH
002A-                140          OCR1AL          .EQ     $2A             Timer/Counter1 Output compare AL
002B-                141          OCR1AH          .EQ     $2B             Timer/Counter1 Output compare AH
002C-                142          TCNT1L          .EQ     $2C             Timer/Counter1 Counter register L
002D-                143          TCNT1H          .EQ     $2D             Timer/Counter1 Counter register H
002E-                144          TCCR1B          .EQ     $2E             Timer/Counter1 Control register B
002F-                145          TCCR1A          .EQ     $2F             Timer/Counter1 Control register A
0030-                146          SFIOR           .EQ     $30             Special Function I/O register
0031-                147          OCDR            .EQ     $31             On chip debug register
0031-                148          OSCCAL          .EQ     $31             Oscillator calibration register
0032-                149          TCNT0           .EQ     $32             Timer/Counter0 (8 bits)
0033-                150          TCCR0           .EQ     $33             Timer/Counter control register
0034-                151          MCUCSR          .EQ     $34             MCU Control & Status register
0035-                152          MCUCR           .EQ     $35             MCU Control register
0036-                153          TWCR            .EQ     $36             Two-wire control register
0037-                154          SPMCR           .EQ     $37             Store Program Memory control reg
0038-                155          TIFR            .EQ     $38             Timer/Counter Interrupt Flag reg
0039-                156          TIMSK           .EQ     $39             Timer/Counter Interrupt Mask reg
003A-                157          GIFR            .EQ     $3A             General Interrupt Flag register
003B-                158          GICR            .EQ     $3B             General Interrupt Control register
003C-                159          OCR0            .EQ     $3C             Timer/Counter0 Output Compare
003D-                160          SPL             .EQ     $3D             Stack pointer low
003E-                161          SPH             .EQ     $3E             Stack pointer high
003F-                162          SREG            .EQ     $3F             Processor status register
0000-                163
0000-                164
0000-                165          ;------------------------------------------------------------------------
0000-                166          ;  RAM Definitions
0000-                167          ;------------------------------------------------------------------------
0000-                168
007F-                169          STACK_TOP       .EQ     $007F           Stack grows down to $0070
0000-                170
0100-                171          CHAR_LINE1      .EQ     $0100,$017F     Character table line 1
0200-                172          CHAR_LINE2      .EQ     $0200,$027F     Character table line 2
0300-                173          CHAR_LINE3      .EQ     $0300,$037F     Character table line 3
0400-                174          CHAR_LINE4      .EQ     $0400,$047F     Character table line 4
0500-                175          CHAR_LINE5      .EQ     $0500,$067F     Character table line 5
0600-                176          CHAR_LINE6      .EQ     $0600,$076F     Character table line 6
0700-                177          CHAR_LINE7      .EQ     $0700,$077F     Character table line 7
0000-                178
0080-                179          ROW0            .EQ     $0080,$00A7     Screen row 1
00A8-                180          ROW1            .EQ     $00A8,$00CF     Screen row 2
00D0-                181          ROW2            .EQ     $00D0,$00F7     Screen row 3
0000-                182
0180-                183          ROW3            .EQ     $0180,$01A7     Screen row 4
01A8-                184          ROW4            .EQ     $01A8,$01CF     Screen row 5
01D0-                185          ROW5            .EQ     $01D0,$01F7     Screen row 6
0000-                186
0280-                187          ROW6            .EQ     $0280,$02A7     Screen row 7
02A8-                188          ROW7            .EQ     $02A8,$02CF     Screen row 8
02D0-                189          ROW8            .EQ     $02D0,$02F7     Screen row 9
0000-                190
0380-                191          ROW9            .EQ     $0380,$03A7     Screen row 10
03A8-                192          ROW10           .EQ     $03A8,$03CF     Screen row 11
03D0-                193          ROW11           .EQ     $03D0,$03F7     Screen row 12
0000-                194
0480-                195          ROW12           .EQ     $0480,$04A7     Screen row 13
04A8-                196          ROW13           .EQ     $04A8,$04CF     Screen row 14
04D0-                197          ROW14           .EQ     $04D0,$04F7     Screen row 15
0000-                198
0580-                199          ROW15           .EQ     $0580,$05A7     Screen row 16
05A8-                200          ROW16           .EQ     $05A8,$05CF     Screen row 17
05D0-                201          ROW17           .EQ     $05D0,$05F7     Screen row 18
0000-                202
0680-                203          ROW18           .EQ     $0680,$06A7     Screen row 19
06A8-                204          ROW19           .EQ     $06A8,$06CF     Screen row 20
06D0-                205          ROW20           .EQ     $06D0,$06F7     Screen row 21
0000-                206
0780-                207          ROW21           .EQ     $0780,$07A7     Screen row 22
07A8-                208          ROW22           .EQ     $07A8,$07CF     Screen row 23
07D0-                209          ROW23           .EQ     $07D0,$07F7     Screen row 24
0000-                210
0800-                211          SOUT_BUFFER     .EQ     $0800,$083F     Plenty of room for serial buffer
0000-                212
0840-                213          ROW_ADDR        .EQ     $0840,$0857     Packed ROW address list
0000-                214
0000-                215
0000-                216          ;------------------------------------------------------------------------
0000-                217          ;  HSYNC macro
0000-                218          ;  HSYNC2 macro (without extra tasks, intended during VSYNC)
0000-                219          ;
0000-                220          ;  The DELAY parameter indicates the number of clock pulses were wasted
0000-                221          ;  before the macro was invoked. This value is used to compensate the
0000-                222          ;  final delay.
0000-                223          ;
0000-                224          ;  Perform some basic task and waste excess time up to 4.7 us
0000-                225          ;  Special care should be taken that all hsyncs are of the same length
0000-                226          ;  to avoid horizontal text jitter
0000-                227          ;------------------------------------------------------------------------
0000-                228
0000-                229          HSYNC           .MA     DELAY
0000-                230                          CPSE    TTY_DELAY,ZERO  Is TTY delay running?
0000-                231                          DEC     TTY_DELAY       Decrement if it is
0000-                232
0000-                233          DELAY           .SE     75-]1-4         Number of clock pulses to waste
0000-                234                          LDI     ACCA,#DELAY/3   Delay divided by loop time
0000-                235          :LOOP           DEC     ACCA            Waste time in loop
0000-                236                          BRNE    :LOOP           Not all time wasted yet!
0000-                237
0000-                238          DELAY           .SE     DELAY\3         How many single clocks left?
0000-                239                          .DO     DELAY>0
0000-                240                          NOP                     At least 1
0000-                241                          .DO     DELAY=2
0000-                242                          NOP                     No, two!
0000-                243                          .FI
0000-                244                          .FI
0000-                245
0000-                246                          .EM
0000-                247
0000-                248          HSYNC2          .MA     DELAY
0000-                249          DELAY           .SE     75-]1-2         Number of clock pulses to waste
0000-                250                          LDI     ACCA,#DELAY/3   Delay divided by loop time
0000-                251          :LOOP           DEC     ACCA            Waste time in loop
0000-                252                          BRNE    :LOOP           Not all time wasted yet!
0000-                253
0000-                254          DELAY           .SE     DELAY\3         How many single clocks left?
0000-                255                          .DO     DELAY>0
0000-                256                          NOP                     At least 1
0000-                257                          .DO     DELAY=2
0000-                258                          NOP                     No, two!
0000-                259                          .FI
0000-                260                          .FI
0000-                261
0000-                262                          .EM
0000-                263
0000-                264
0000-                265          ;------------------------------------------------------------------------
0000-                266          ;  COMP5060 macro
0000-                267          ;
0000-                268          ;  This macro compensates for the 0.25us difference between the line
0000-                269          ;  length of a 50Hz and a 60Hz system.
0000-                270          ;  In case of 50Hz, this macro eats up 3 clock pulses
0000-                271          ;  In case of 60Hz, this macro eats up 7 clock pulses
0000-                272          ;------------------------------------------------------------------------
0000-                273
0000-                274          COMP5060        .MA
0000-                275                          CP      STANDARD,ZERO   50 or 60Hz?
0000-                276                          BREQ    :60HZ
0000-                277                          NOP                     50Hz takes 4 clock pulses longer
0000-                278                          NOP                      (0.25us)
0000-                279                          NOP
0000-                280                          NOP
0000-                281                          NOP
0000-                282          :60HZ
0000-                283                          .EM
0000-                284
0000-                285
0000-                286          ;------------------------------------------------------------------------
0000-                287          ;  CHAR macro
0000-                288          ;
0000-                289          ;  Character outputting macro. Characters are painted to the screen at
0000-                290          ;  top speed. No time to call for subroutines. Every single clock pulse
0000-                291          ;  counts.
0000-                292          ;------------------------------------------------------------------------
0000-                293
0000-                294          CHAR            .MA
0000-                295                          LD      ACCA,X+         Get character pattern
0000-                296                          OUT     PORTB,ACCA      Only used bit is b0
0000-                297                          NOP
0000-                298                          LSR     ACCA
0000-                299                          OUT     PORTB,ACCA
0000-                300                          NOP
0000-                301                          LSR     ACCA
0000-                302                          OUT     PORTB,ACCA
0000-                303                          NOP
0000-                304                          LSR     ACCA
0000-                305                          OUT     PORTB,ACCA
0000-                306                          NOP
0000-                307                          LSR     ACCA
0000-                308                          OUT     PORTB,ACCA
0000-                309                          LD      X,Y+            Get next character from line
0000-                310                          OUT     PORTB,ZERO      Clear bit before output
0000-                311                          .EM
0000-                312
0000-                313
0000-                314          ;------------------------------------------------------------------------
0000-                315          ;  Vector space
0000-                316          ;------------------------------------------------------------------------
0000-                317
0000-29 C0           318 (     2) RESET           RJMP    INIT            Get things going
0001-00 00           319 (     1)                 NOP
0002-                320
0002-18 95           321 (  4/5*)                 RETI                    INT0
0003-00 00           322 (     1)                 NOP
0004-                323
0004-18 95           324 (  4/5*)                 RETI                    INT1
0005-00 00           325 (     1)                 NOP
0006-                326
0006-18 95           327 (  4/5*)                 RETI                    INT2
0007-00 00           328 (     1)                 NOP
0008-                329
0008-18 95           330 (  4/5*)                 RETI                    TIMER2 COMP
0009-00 00           331 (     1)                 NOP
000A-                332
000A-18 95           333 (  4/5*)                 RETI                    TIMER2 OVF
000B-00 00           334 (     1)                 NOP
000C-                335
000C-18 95           336 (  4/5*)                 RETI                    TIMER1 CAPT
000D-00 00           337 (     1)                 NOP
000E-                338
000E-18 95           339 (  4/5*)                 RETI                    TIMER1 COMPA
000F-00 00           340 (     1)                 NOP
0010-                341
0010-18 95           342 (  4/5*)                 RETI                    TIMER1 COMPB
0011-00 00           343 (     1)                 NOP
0012-                344
0012-18 95           345 (  4/5*)                 RETI                    TIMER1 OVF
0013-00 00           346 (     1)                 NOP
0014-                347
0014-92 98           348 (   1/2)                 CBI     PORTD,2         Create falling edge of sync
0015-09 94           349 (     2)                 IJMP                    Jump to current state
0016-                350
0016-18 95           351 (  4/5*)                 RETI                    TIMER0 OVF
0017-00 00           352 (     1)                 NOP
0018-                353
0018-18 95           354 (  4/5*)                 RETI                    SPI, STC
0019-00 00           355 (     1)                 NOP
001A-                356
001A-18 95           357 (  4/5*)                 RETI                    USART0, RXC
001B-00 00           358 (     1)                 NOP
001C-                359
001C-18 95           360 (  4/5*)                 RETI                    USART0, UDRE
001D-00 00           361 (     1)                 NOP
001E-                362
001E-18 95           363 (  4/5*)                 RETI                    USART0, TXC
001F-00 00           364 (     1)                 NOP
0020-                365
0020-18 95           366 (  4/5*)                 RETI                    ADC
0021-00 00           367 (     1)                 NOP
0022-                368
0022-18 95           369 (  4/5*)                 RETI                    EE READY
0023-00 00           370 (     1)                 NOP
0024-                371
0024-18 95           372 (  4/5*)                 RETI                    ANALOG COMP
0025-00 00           373 (     1)                 NOP
0026-                374
0026-18 95           375 (  4/5*)                 RETI                    TWI
0027-00 00           376 (     1)                 NOP
0028-                377
0028-18 95           378 (  4/5*)                 RETI                    SPM READY
0029-00 00           379 (     1)                 NOP
002A-                380
002A-                381
002A-                382          ;------------------------------------------------------------------------
002A-                383          ;  INIT
002A-                384          ;  Get things going
002A-                385          ;------------------------------------------------------------------------
002A-                386
002A-0F E7           387 (     1) INIT            LDI     ACCA,#STACK_TOP Set stack pointer
002B-0D BF           388 (     1)                 OUT     SPL,ACCA
002C-00 E0           389 (     1)                 LDI     ACCA,/STACK_TOP
002D-0E BF           390 (     1)                 OUT     SPH,ACCA
002E-00 24           391 (     1)                 EOR     ZERO,ZERO       Make this register 0 (4ever)
002F-20 2C           392 (     1)                 MOV     TTY_DELAY,ZERO  Clear TTY delay timer
0030-10 2C           393 (     1)                 MOV     STANDARD,ZERO   Set 60Hz mode for now
0031-                394
0031-                395          ; Init ports
0031-08 BA           396 (     1)                 OUT     PORTB,ZERO      Make video bit low
0032-0F EF           397 (     1)                 LDI     ACCA,#%1111.1111 Only b7 of port B is actually
0033-07 BB           398 (     1)                 OUT     DDRB,ACCA         used, rest outputs garbage
0034-                399          ;                                       b6..b0 could have been inputs but
0034-                400          ;                                        that would leave them floating
0034-                401
0034-04 BA           402 (     1)                 OUT     DDRC,ZERO       Port C are all inputs (ASCII)
0035-05 BB           403 (     1)                 OUT     PORTC,ACCA      Enable pull-ups
0036-                404
0036-02 BB           405 (     1)                 OUT     PORTD,ACCA      Prepare outputs & pull-ups of D
0037-0E E0           406 (     1)                 LDI     ACCA,#%0000.1110 Bits 1, 2 and 3 of Port D are
0038-01 BB           407 (     1)                 OUT     DDRD,ACCA         outputs
0039-                408
0039-                409          ; Initialize TTY
0039-A0 2C           410 (     1)                 MOV     CH,ZERO         Set cursor in upper left corner
003A-B0 2C           411 (     1)                 MOV     CV,ZERO
003B-                412
003B-                413          ; Handle differences between 50 and 60Hz systems
003B-86 99           414 (2/3/4*)                 SBIC    PIND,6          50 or 60Hz?
003C-13 94           415 (     1)                 INC     STANDARD        50Hz!
003D-                416
003D-10 14           417 (     1)                 CP      STANDARD,ZERO   What standard is selected?
003E-39 F0           418 (   1/2)                 BREQ    .60HZ
003F-                419
003F-08 E2           420 (     1)                 LDI     ACCA,#LINES_TOP50  Setup variables for 50Hz
0040-30 2E           421 (     1)                 MOV     TOPCOUNT,ACCA
0041-03 E0           422 (     1)                 LDI     ACCA,#LINES_INT50
0042-40 2E           423 (     1)                 MOV     INTCOUNT,ACCA
0043-09 E1           424 (     1)                 LDI     ACCA,#LINES_BTM50
0044-50 2E           425 (     1)                 MOV     BTMCOUNT,ACCA
0045-06 C0           426 (     2)                 RJMP    .50HZ
0046-                427
0046-0A E1           428 (     1) .60HZ           LDI     ACCA,#LINES_TOP60  Setup variables for 60Hz
0047-30 2E           429 (     1)                 MOV     TOPCOUNT,ACCA
0048-02 E0           430 (     1)                 LDI     ACCA,#LINES_INT60
0049-40 2E           431 (     1)                 MOV     INTCOUNT,ACCA
004A-0D E0           432 (     1)                 LDI     ACCA,#LINES_BTM60
004B-50 2E           433 (     1)                 MOV     BTMCOUNT,ACCA
004C-                434          .50HZ
004C-                435
004C-                436          ; Initialize Character generator lookup tables
004C-B1 E0           437 (     1)                 LDI     X+1,/CHAR_LINE1 Copy character line 1
004D-00 E0           438 (     1)                 LDI     ACCA,#0          with an offset of 0
004E-2D D0           439 ( 2/3/4)                 RCALL   COPY_CHARTAB
004F-B2 E0           440 (     1)                 LDI     X+1,/CHAR_LINE2 Copy character line 2
0050-01 E0           441 (     1)                 LDI     ACCA,#1          with an offset of 1
0051-2A D0           442 ( 2/3/4)                 RCALL   COPY_CHARTAB
0052-B3 E0           443 (     1)                 LDI     X+1,/CHAR_LINE3 Copy character line 3
0053-02 E0           444 (     1)                 LDI     ACCA,#2          with an offset of 2
0054-27 D0           445 ( 2/3/4)                 RCALL   COPY_CHARTAB
0055-B4 E0           446 (     1)                 LDI     X+1,/CHAR_LINE4 Copy character line 4
0056-03 E0           447 (     1)                 LDI     ACCA,#3          with an offset of 3
0057-24 D0           448 ( 2/3/4)                 RCALL   COPY_CHARTAB
0058-B5 E0           449 (     1)                 LDI     X+1,/CHAR_LINE5 Copy character line 5
0059-04 E0           450 (     1)                 LDI     ACCA,#4          with an offset of 4
005A-21 D0           451 ( 2/3/4)                 RCALL   COPY_CHARTAB
005B-B6 E0           452 (     1)                 LDI     X+1,/CHAR_LINE6 Copy character line 6
005C-05 E0           453 (     1)                 LDI     ACCA,#5          with an offset of 5
005D-1E D0           454 ( 2/3/4)                 RCALL   COPY_CHARTAB
005E-B7 E0           455 (     1)                 LDI     X+1,/CHAR_LINE7 Copy character line 7
005F-06 E0           456 (     1)                 LDI     ACCA,#6          with an offset of 6
0060-1B D0           457 ( 2/3/4)                 RCALL   COPY_CHARTAB
0061-                458
0061-                459          ; Fill Row address table in RAM
0061-25 D0           460 ( 2/3/4)                 RCALL   COPY_ROWADDR
0062-                461
0062-                462          ; Fill splash screen
0062-2E D0           463 ( 2/3/4)                 RCALL   FILL_SPLASH
0063-                464
0063-                465          ; Initialize serial output (2400 baud, 8n1)
0063-01 E0           466 (     1)                 LDI     ACCA,/416       Set baud rate generator
0064-00 BD           467 (     1)                 OUT     UBRRH,ACCA
0065-00 EA           468 (     1)                 LDI     ACCA,#416
0066-09 B9           469 (     1)                 OUT     UBRRL,ACCA
0067-06 E8           470 (     1)                 LDI     ACCA,#%1000.0110 Select 8n1 mode
0068-00 BD           471 (     1)                 OUT     UCSRC,ACCA
0069-08 E0           472 (     1)                 LDI     ACCA,#%0000.1000 Enable serial output
006A-0A B9           473 (     1)                 OUT     UCSRB,ACCA
006B-80 E0           474 (     1)                 LDI     SOUT_HEAD,#0    Clear serial output buffer
006C-90 E0           475 (     1)                 LDI     SOUT_TAIL,#0     pointers
006D-                476
006D-                477          ; Init timer/counter 0 to interrupt at Hsync interval
006D-0A E0           478 (     1)                 LDI     ACCA,#%0000.1010 Timer0 control: CTC mode, no OC,
006E-03 BF           479 (     1)                 OUT     TCCR0,ACCA        and prescaler :8
006F-0E E7           480 (     1)                 LDI     ACCA,PER60      63.5us interval for 60Hz
0070-10 10           481 ( 1/2/3)                 CPSE    STANDARD,ZERO   Check 50/60Hz jumper
0071-0F E7           482 (     1)                 LDI     ACCA,PER50      64us interval for 50Hz
0072-0C BF           483 (     1)                 OUT     OCR0,ACCA       Set CTC Top
0073-02 E0           484 (     1)                 LDI     ACCA,#%0000.0010 Set OCIE0 interrupt mask
0074-09 BF           485 (     1)                 OUT     TIMSK,ACCA
0075-                486
0075-                487          ; Prepare registers for take off
0075-                488
0075-EA EB           489 (     1)                 LDI     Z,#VSYNC1       Start with equalizing pulses
0076-F0 E0           490 (     1)                 LDI     Z+1,/VSYNC1      before Vsync
0077-                491
0077-78 94           492 (     1)                 SEI                     Enable interrupts (show time!)
0078-                493
0078-                494          ;------------------------------------------------------------------------
0078-                495          ;  Main program loop
0078-                496          ;  All actual work is done inside the interrupt routine
0078-                497          ;  Main program loop should remain empty to avoid horizontal jitter in
0078-                498          ;  the generated picture due to potential interrupt latency problems.
0078-                499          ;------------------------------------------------------------------------
0078-                500
0078-00 E8           501 (     1) .4EVER          LDI     ACCA,#%1000.0000 Allow and define Sleep mode
0079-05 BF           502 (     1)                 OUT     MCUCR,ACCA
007A-88 95           503 (     1)                 SLEEP                   Go to sleep (constant latency)
007B-FC CF           504 (     2)                 RJMP    .4EVER          A well organized main loop
007C-                505
007C-                506          ;------------------------------------------------------------------------
007C-                507          ;  COPY_CHARTAB
007C-                508          ;  Copy one line of the character table from ROM into RAM
007C-                509          ;  X is used as destination pointer
007C-                510          ;  ACCA holds line offset
007C-                511          ;------------------------------------------------------------------------
007C-                512
007C-A0 E0           513 (     1) COPY_CHARTAB    LDI     X,#CHAR_LINE1   Destination low byte
007D-EE E7           514 (     1)                 LDI     Z,#CHAR_TABLE*2 Get start of table in ROM
007E-F9 E0           515 (     1)                 LDI     Z+1,/CHAR_TABLE*2
007F-E0 0F           516 (     1)                 ADD     Z,ACCA          Add line offset to it
0080-F0 1D           517 (     1)                 ADC     Z+1,ZERO
0081-                518
0081-04 91           519 (     3) .LOOP           LPM     ACCA,Z          Get byte from ROM
0082-0C 93           520 (   1/2)                 ST      X,ACCA           and save it in RAM
0083-37 96           521 (     1)                 ADIW    Z,#7            Point to next character in table
0084-A3 95           522 (     1)                 INC     X               Increment RAM pointer
0085-DA F7           523 (   1/2)                 BRPL    .LOOP           Do until b7 is set (128 bytes)
0086-08 95           524 (  4/5*)                 RET
0087-                525
0087-                526
0087-                527          ;------------------------------------------------------------------------
0087-                528          ;  COPY_ROWADDR
0087-                529          ;  Copy packed Row address table to RAM
0087-                530          ;  Each entry in the table holds the packed address of all 24 text rows
0087-                531          ;  in screen memory.
0087-                532          ;  Bits b2..b0 are the MSB, while bits b7..b3 are the LSB of the address.
0087-                533          ;------------------------------------------------------------------------
0087-                534
0087-A0 E4           535 (     1) COPY_ROWADDR    LDI     X,#ROW_ADDR     Setup the destination address
0088-B8 E0           536 (     1)                 LDI     X+1,/ROW_ADDR
0089-EE EF           537 (     1)                 LDI     Z,#ROM_ROW*2    Setup source address
008A-FC E0           538 (     1)                 LDI     Z+1,/ROM_ROW*2
008B-18 E1           539 (     1)                 LDI     ACCB,#24        Do 24 bytes
008C-                540
008C-05 91           541 (     3) .LOOP           LPM     ACCA,Z+         Get byte from ROM
008D-0D 93           542 (   1/2)                 ST      X+,ACCA          and store it in RAM
008E-1A 95           543 (     1)                 DEC     ACCB
008F-E1 F7           544 (   1/2)                 BRNE    .LOOP           Do all bytes
0090-08 95           545 (  4/5*)                 RET
0091-                546
0091-                547
0091-                548          ;------------------------------------------------------------------------
0091-                549          ;  FILL_SPLASH
0091-                550          ;  Fill splash screen
0091-                551          ;------------------------------------------------------------------------
0091-                552
0091-90 2C           553 (     1) FILL_SPLASH     MOV     TTY_STATE,ZERO  Set Splash screen state
0092-93 94           554 (     1)                 INC     TTY_STATE
0093-60 2C           555 (     1)                 MOV     FIRST_LINE,ZERO First line first
0094-                556
0094-0A E5           557 (     1)                 LDI     ACCA,#$5A       Have we been here before?
0095-F0 16           558 (     1)                 CP      SPLASH_FLAG,ACCA
0096-09 F1           559 (   1/2)                 BREQ    .CLS            Yes! Clear screen
0097-F0 2E           560 (     1)                 MOV     SPLASH_FLAG,ACCA Set Splash flag
0098-C0 2C           561 (     1)                 MOV     CURSOR_TMR,ZERO Disable flashing during splash
0099-                562
0099-E6 E1           563 (     1)                 LDI     Z,#SPLASH_TXT*2 Read Splash text from ROM
009A-FD E0           564 (     1)                 LDI     Z+1,/SPLASH_TXT*2
009B-A0 E8           565 (     1)                 LDI     X,#ROW0          and copy it to video buffer
009C-B0 E0           566 (     1)                 LDI     X+1,/ROW0         (a total of 8 blocks of 3
009D-14 D0           567 ( 2/3/4)                 RCALL   .FILL               lines each)
009E-A0 E8           568 (     1)                 LDI     X,#ROW3
009F-B1 E0           569 (     1)                 LDI     X+1,/ROW3
00A0-11 D0           570 ( 2/3/4)                 RCALL   .FILL
00A1-A0 E8           571 (     1)                 LDI     X,#ROW6
00A2-B2 E0           572 (     1)                 LDI     X+1,/ROW6
00A3-0E D0           573 ( 2/3/4)                 RCALL   .FILL
00A4-A0 E8           574 (     1)                 LDI     X,#ROW9
00A5-B3 E0           575 (     1)                 LDI     X+1,/ROW9
00A6-0B D0           576 ( 2/3/4)                 RCALL   .FILL
00A7-A0 E8           577 (     1)                 LDI     X,#ROW12
00A8-B4 E0           578 (     1)                 LDI     X+1,/ROW12
00A9-08 D0           579 ( 2/3/4)                 RCALL   .FILL
00AA-A0 E8           580 (     1)                 LDI     X,#ROW15
00AB-B5 E0           581 (     1)                 LDI     X+1,/ROW15
00AC-05 D0           582 ( 2/3/4)                 RCALL   .FILL
00AD-A0 E8           583 (     1)                 LDI     X,#ROW18
00AE-B6 E0           584 (     1)                 LDI     X+1,/ROW18
00AF-02 D0           585 ( 2/3/4)                 RCALL   .FILL
00B0-A0 E8           586 (     1)                 LDI     X,#ROW21
00B1-B7 E0           587 (     1)                 LDI     X+1,/ROW21
00B2-                588
00B2-18 E7           589 (     1) .FILL           LDI     ACCB,#120
00B3-05 91           590 (     3) .LOOP           LPM     ACCA,Z+
00B4-0D 93           591 (   1/2)                 ST      X+,ACCA
00B5-1A 95           592 (     1)                 DEC     ACCB
00B6-E1 F7           593 (   1/2)                 BRNE    .LOOP
00B7-08 95           594 (  4/5*)                 RET
00B8-                595
00B8-E0 2C           596 (     1) .CLS            MOV     SUB_STATE,ZERO  Clear the screen immediately
00B9-A3 C3           597 (     2)                 RJMP    TTY_CLS
00BA-                598
00BA-                599
00BA-                600          ;------------------------------------------------------------------------
00BA-                601          ;  VSYNC state machine routines
00BA-                602          ;  To ensure compatibility with just about any TV screen I decided to
00BA-                603          ;  generate an official Vsync signal, including equalizing pulses.
00BA-                604          ;  Most TVs don't mind if they were missing, but I wanted the Vsync to
00BA-                605          ;  be perfect anyway.
00BA-                606          ;  The total Vsync takes up 7 lines, and the equal number of states.
00BA-                607          ;------------------------------------------------------------------------
00BA-                608
00BA-                609          ;------------------------------------------------------------------------
00BA-                610          ; First leading line with half line sync pulse
00BA-                611
00BA-                612          VSYNC1          >HSYNC  2               Start with Hsync
00BA-20 10        M    1 ( 1/2/3)                 CPSE    TTY_DELAY,ZERO  Is TTY delay running?
00BB-2A 94        M    2 (     1)                 DEC     TTY_DELAY       Decrement if it is
00BC-             M    3
0045-             M    4          DELAY           .SE     75-2-4         Number of clock pulses to waste
00BC-07 E1        M    5 (     1)                 LDI     ACCA,#DELAY/3   Delay divided by loop time
00BD-0A 95        M    6 (     1) :LOOP           DEC     ACCA            Waste time in loop
00BE-F1 F7        M    7 (   1/2)                 BRNE    :LOOP           Not all time wasted yet!
00BF-             M    8
0000-             M    9          DELAY           .SE     DELAY\3         How many single clocks left?
00BF-             S   10                          .DO     DELAY>0
00BF-             S   11                          NOP                     At least 1
00BF-             S   12                          .DO     DELAY=2
00BF-             S   13                          NOP                     No, two!
00BF-             S   14                          .FI
00BF-             M   15                          .FI
00BF-             M   16
00BF-92 9A           613 (   1/2)                 SBI     PORTD,2         End of Hsync, make high now
00C0-E3 EC           614 (     1)                 LDI     Z,#VSYNC2       Next stop is second equalizing
00C1-F0 E0           615 (     1)                 LDI     Z+1,/VSYNC2      line before Vsync
00C2-48 C0           616 (     2)                 RJMP    HALFSYNC        Generate sync pulse at h/2
00C3-                617
00C3-                618          ;------------------------------------------------------------------------
00C3-                619          ; Second leading line with half line sync pulse
00C3-                620
00C3-                621          VSYNC2          >HSYNC  2               Start with Hsync
00C3-20 10        M    1 ( 1/2/3)                 CPSE    TTY_DELAY,ZERO  Is TTY delay running?
00C4-2A 94        M    2 (     1)                 DEC     TTY_DELAY       Decrement if it is
00C5-             M    3
0045-             M    4          DELAY           .SE     75-2-4         Number of clock pulses to waste
00C5-07 E1        M    5 (     1)                 LDI     ACCA,#DELAY/3   Delay divided by loop time
00C6-0A 95        M    6 (     1) :LOOP           DEC     ACCA            Waste time in loop
00C7-F1 F7        M    7 (   1/2)                 BRNE    :LOOP           Not all time wasted yet!
00C8-             M    8
0000-             M    9          DELAY           .SE     DELAY\3         How many single clocks left?
00C8-             S   10                          .DO     DELAY>0
00C8-             S   11                          NOP                     At least 1
00C8-             S   12                          .DO     DELAY=2
00C8-             S   13                          NOP                     No, two!
00C8-             S   14                          .FI
00C8-             M   15                          .FI
00C8-             M   16
00C8-92 9A           622 (   1/2)                 SBI     PORTD,2         End of Hsync, make high now
00C9-EC EC           623 (     1)                 LDI     Z,#VSYNC3       Next stop is first half of Vsync
00CA-F0 E0           624 (     1)                 LDI     Z+1,/VSYNC3
00CB-3F C0           625 (     2)                 RJMP    HALFSYNC        Generate sync pulse at h/2
00CC-                626
00CC-                627          ;------------------------------------------------------------------------
00CC-                628          ; First line of Vsync
00CC-                629
00CC-EF EC           630 (     1) VSYNC3          LDI     Z,#VSYNC4       Next stop is second half of Vsync
00CD-F0 E0           631 (     1)                 LDI     Z+1,/VSYNC4
00CE-4E C0           632 (     2)                 RJMP    HALFVSYNC
00CF-                633
00CF-                634          ;------------------------------------------------------------------------
00CF-                635          ; Second line of Vsync
00CF-                636
00CF-E2 ED           637 (     1) VSYNC4          LDI     Z,#VSYNC5       Next stop is end line of Vsync
00D0-F0 E0           638 (     1)                 LDI     Z+1,/VSYNC5      (the one with the double pulse)
00D1-4B C0           639 (     2)                 RJMP    HALFVSYNC
00D2-                640
00D2-                641          ;------------------------------------------------------------------------
00D2-                642          ; Half a line of Vsync and first half trailing line
00D2-                643
00D2-E8 EF           644 (     1) VSYNC5          LDI     Z,#VSYNC6       Next stop is first trailing
00D3-F0 E0           645 (     1)                 LDI     Z+1,/VSYNC6      Vsync line
00D4-0D E8           646 (     1)                 LDI     ACCA,#141       Wait half a line
00D5-0A 95           647 (     1) .DELAY1         DEC     ACCA            Waste our time away
00D6-F1 F7           648 (   1/2)                 BRNE    .DELAY1         Not done yet!
00D7-                649                          >COMP5060               Compensate 50Hz/60Hz
00D7-10 14        M    1 (     1)                 CP      STANDARD,ZERO   50 or 60Hz?
00D8-29 F0        M    2 (   1/2)                 BREQ    :60HZ
00D9-00 00        M    3 (     1)                 NOP                     50Hz takes 4 clock pulses longer
00DA-00 00        M    4 (     1)                 NOP                      (0.25us)
00DB-00 00        M    5 (     1)                 NOP
00DC-00 00        M    6 (     1)                 NOP
00DD-00 00        M    7 (     1)                 NOP
00DE-             M    8          :60HZ
00DE-                650
00DE-92 9A           651 (   1/2)                 SBI     PORTD,2         Send inverted pulse
00DF-                652                          >HSYNC  0               Delay 4.7us
00DF-20 10        M    1 ( 1/2/3)                 CPSE    TTY_DELAY,ZERO  Is TTY delay running?
00E0-2A 94        M    2 (     1)                 DEC     TTY_DELAY       Decrement if it is
00E1-             M    3
0047-             M    4          DELAY           .SE     75-0-4         Number of clock pulses to waste
00E1-07 E1        M    5 (     1)                 LDI     ACCA,#DELAY/3   Delay divided by loop time
00E2-0A 95        M    6 (     1) :LOOP           DEC     ACCA            Waste time in loop
00E3-F1 F7        M    7 (   1/2)                 BRNE    :LOOP           Not all time wasted yet!
00E4-             M    8
0002-             M    9          DELAY           .SE     DELAY\3         How many single clocks left?
00E4-             M   10                          .DO     DELAY>0
00E4-00 00        M   11 (     1)                 NOP                     At least 1
00E5-             M   12                          .DO     DELAY=2
00E5-00 00        M   13 (     1)                 NOP                     No, two!
00E6-             M   14                          .FI
00E6-             M   15                          .FI
00E6-             M   16
00E6-92 98           653 (   1/2)                 CBI     PORTD,2
00E7-                654                          >HSYNC2 0               End of 2.5 lines of Vsync
0049-             M    1          DELAY           .SE     75-0-2         Number of clock pulses to waste
00E7-08 E1        M    2 (     1)                 LDI     ACCA,#DELAY/3   Delay divided by loop time
00E8-0A 95        M    3 (     1) :LOOP           DEC     ACCA            Waste time in loop
00E9-F1 F7        M    4 (   1/2)                 BRNE    :LOOP           Not all time wasted yet!
00EA-             M    5
0001-             M    6          DELAY           .SE     DELAY\3         How many single clocks left?
00EA-             M    7                          .DO     DELAY>0
00EA-00 00        M    8 (     1)                 NOP                     At least 1
00EB-             S    9                          .DO     DELAY=2
00EB-             S   10                          NOP                     No, two!
00EB-             M   11                          .FI
00EB-             M   12                          .FI
00EB-             M   13
00EB-92 9A           655 (   1/2)                 SBI     PORTD,2
00EC-                656
00EC-C0 14           657 (     1)                 CP      CURSOR_TMR,ZERO Should the cursor flash?
00ED-49 F0           658 (   1/2)                 BREQ    .RETI           Nope! Still on splash screen
00EE-                659
00EE-CA 94           660 (     1)                 DEC     CURSOR_TMR
00EF-39 F4           661 (   1/2)                 BRNE    .RETI           Not timed out yet!
00F0-00 E1           662 (     1)                 LDI     ACCA,#CURSOR_RLD Reload flash timer
00F1-C0 2E           663 (     1)                 MOV     CURSOR_TMR,ACCA
00F2-                664
00F2-98 D3           665 ( 2/3/4)                 RCALL   CURSOR_POS      Calculate cursor position
00F3-0D 2D           666 (     1)                 MOV     ACCA,CURSOR_CHR Swap cursor character with
00F4-1C 91           667 ( 1/2/3)                 LD      ACCB,X           character under the cursor
00F5-D1 2E           668 (     1)                 MOV     CURSOR_CHR,ACCB
00F6-0C 93           669 (   1/2)                 ST      X,ACCA
00F7-                670
00F7-18 95           671 (  4/5*) .RETI           RETI
00F8-                672
00F8-                673
00F8-                674          ;------------------------------------------------------------------------
00F8-                675          ; First trailing line with half line sync pulse
00F8-                676
00F8-                677          VSYNC6          >HSYNC  2               Start with Hsync
00F8-20 10        M    1 ( 1/2/3)                 CPSE    TTY_DELAY,ZERO  Is TTY delay running?
00F9-2A 94        M    2 (     1)                 DEC     TTY_DELAY       Decrement if it is
00FA-             M    3
0045-             M    4          DELAY           .SE     75-2-4         Number of clock pulses to waste
00FA-07 E1        M    5 (     1)                 LDI     ACCA,#DELAY/3   Delay divided by loop time
00FB-0A 95        M    6 (     1) :LOOP           DEC     ACCA            Waste time in loop
00FC-F1 F7        M    7 (   1/2)                 BRNE    :LOOP           Not all time wasted yet!
00FD-             M    8
0000-             M    9          DELAY           .SE     DELAY\3         How many single clocks left?
00FD-             S   10                          .DO     DELAY>0
00FD-             S   11                          NOP                     At least 1
00FD-             S   12                          .DO     DELAY=2
00FD-             S   13                          NOP                     No, two!
00FD-             S   14                          .FI
00FD-             M   15                          .FI
00FD-             M   16
00FD-92 9A           678 (   1/2)                 SBI     PORTD,2         End of Hsync, make high now
00FE-E1 E0           679 (     1)                 LDI     Z,#VSYNC7       Next stop is second and last
00FF-F1 E0           680 (     1)                 LDI     Z+1,/VSYNC7      trailing Vsync line
0100-0A C0           681 (     2)                 RJMP    HALFSYNC        Generate sync pulse at h/2
0101-                682
0101-                683          ;------------------------------------------------------------------------
0101-                684          ; Second trailing line with half line sync pulse
0101-                685
0101-                686          VSYNC7          >HSYNC  2               Start with Hsync
0101-20 10        M    1 ( 1/2/3)                 CPSE    TTY_DELAY,ZERO  Is TTY delay running?
0102-2A 94        M    2 (     1)                 DEC     TTY_DELAY       Decrement if it is
0103-             M    3
0045-             M    4          DELAY           .SE     75-2-4         Number of clock pulses to waste
0103-07 E1        M    5 (     1)                 LDI     ACCA,#DELAY/3   Delay divided by loop time
0104-0A 95        M    6 (     1) :LOOP           DEC     ACCA            Waste time in loop
0105-F1 F7        M    7 (   1/2)                 BRNE    :LOOP           Not all time wasted yet!
0106-             M    8
0000-             M    9          DELAY           .SE     DELAY\3         How many single clocks left?
0106-             S   10                          .DO     DELAY>0
0106-             S   11                          NOP                     At least 1
0106-             S   12                          .DO     DELAY=2
0106-             S   13                          NOP                     No, two!
0106-             S   14                          .FI
0106-             M   15                          .FI
0106-             M   16
0106-92 9A           687 (   1/2)                 SBI     PORTD,2         End of Hsync, make high now
0107-EC E3           688 (     1)                 LDI     Z,#TOPLINES     Next stop are the empty lines
0108-F1 E0           689 (     1)                 LDI     Z+1,/TOPLINES    at the top of the screen
0109-83 2C           690 (     1)                 MOV     LINE_CNTR,TOPCOUNT Set number of lines at the top
010A-00 00           691 (     1)                 NOP                     Compensates for the missing RJMP
010B-                692
010B-                693          ;------------------------------------------------------------------------
010B-                694          ; Leading and trailing lines share this part of the code
010B-                695
010B-0D E8           696 (     1) HALFSYNC        LDI     ACCA,#141       Wait half a line
010C-0A 95           697 (     1) .DELAY          DEC     ACCA            Waste our time away
010D-F1 F7           698 (   1/2)                 BRNE    .DELAY          Not done yet!
010E-                699                          >COMP5060               Compensate for the difference
010E-10 14        M    1 (     1)                 CP      STANDARD,ZERO   50 or 60Hz?
010F-29 F0        M    2 (   1/2)                 BREQ    :60HZ
0110-00 00        M    3 (     1)                 NOP                     50Hz takes 4 clock pulses longer
0111-00 00        M    4 (     1)                 NOP                      (0.25us)
0112-00 00        M    5 (     1)                 NOP
0113-00 00        M    6 (     1)                 NOP
0114-00 00        M    7 (     1)                 NOP
0115-             M    8          :60HZ
0115-00 00           700 (     1)                 NOP                      between 50 and 60Hz line length
0116-                701
0116-92 98           702 (   1/2)                 CBI     PORTD,2         Generate another sync pulse
0117-                703                          >HSYNC2 0               No RJMP delay this time
0049-             M    1          DELAY           .SE     75-0-2         Number of clock pulses to waste
0117-08 E1        M    2 (     1)                 LDI     ACCA,#DELAY/3   Delay divided by loop time
0118-0A 95        M    3 (     1) :LOOP           DEC     ACCA            Waste time in loop
0119-F1 F7        M    4 (   1/2)                 BRNE    :LOOP           Not all time wasted yet!
011A-             M    5
0001-             M    6          DELAY           .SE     DELAY\3         How many single clocks left?
011A-             M    7                          .DO     DELAY>0
011A-00 00        M    8 (     1)                 NOP                     At least 1
011B-             S    9                          .DO     DELAY=2
011B-             S   10                          NOP                     No, two!
011B-             M   11                          .FI
011B-             M   12                          .FI
011B-             M   13
011B-92 9A           704 (   1/2)                 SBI     PORTD,2         Make sync high again
011C-18 95           705 (  4/5*)                 RETI
011D-                706
011D-                707          ;------------------------------------------------------------------------
011D-                708          ; First and second Vsync lines share this part of the code
011D-                709
011D-0D E8           710 (     1) HALFVSYNC       LDI     ACCA,#141       Wait half a line
011E-0A 95           711 (     1) .DELAY1         DEC     ACCA            Waste our time away
011F-F1 F7           712 (   1/2)                 BRNE    .DELAY1         Not done yet!
0120-                713                          >COMP5060               Compensate 50Hz/60Hz
0120-10 14        M    1 (     1)                 CP      STANDARD,ZERO   50 or 60Hz?
0121-29 F0        M    2 (   1/2)                 BREQ    :60HZ
0122-00 00        M    3 (     1)                 NOP                     50Hz takes 4 clock pulses longer
0123-00 00        M    4 (     1)                 NOP                      (0.25us)
0124-00 00        M    5 (     1)                 NOP
0125-00 00        M    6 (     1)                 NOP
0126-00 00        M    7 (     1)                 NOP
0127-             M    8          :60HZ
0127-                714
0127-92 9A           715 (   1/2)                 SBI     PORTD,2         Send inverted pulse
0128-                716                          >HSYNC  0               Delay 4.7us
0128-20 10        M    1 ( 1/2/3)                 CPSE    TTY_DELAY,ZERO  Is TTY delay running?
0129-2A 94        M    2 (     1)                 DEC     TTY_DELAY       Decrement if it is
012A-             M    3
0047-             M    4          DELAY           .SE     75-0-4         Number of clock pulses to waste
012A-07 E1        M    5 (     1)                 LDI     ACCA,#DELAY/3   Delay divided by loop time
012B-0A 95        M    6 (     1) :LOOP           DEC     ACCA            Waste time in loop
012C-F1 F7        M    7 (   1/2)                 BRNE    :LOOP           Not all time wasted yet!
012D-             M    8
0002-             M    9          DELAY           .SE     DELAY\3         How many single clocks left?
012D-             M   10                          .DO     DELAY>0
012D-00 00        M   11 (     1)                 NOP                     At least 1
012E-             M   12                          .DO     DELAY=2
012E-00 00        M   13 (     1)                 NOP                     No, two!
012F-             M   14                          .FI
012F-             M   15                          .FI
012F-             M   16
012F-92 98           717 (   1/2)                 CBI     PORTD,2
0130-                718
0130-0E E8           719 (     1)                 LDI     ACCA,#142       Wait another half a line
0131-0A 95           720 (     1) .DELAY2         DEC     ACCA            Waste our time away
0132-F1 F7           721 (   1/2)                 BRNE    .DELAY2         Not done yet!
0133-                722                          >COMP5060               Compensate 50Hz/60Hz
0133-10 14        M    1 (     1)                 CP      STANDARD,ZERO   50 or 60Hz?
0134-29 F0        M    2 (   1/2)                 BREQ    :60HZ
0135-00 00        M    3 (     1)                 NOP                     50Hz takes 4 clock pulses longer
0136-00 00        M    4 (     1)                 NOP                      (0.25us)
0137-00 00        M    5 (     1)                 NOP
0138-00 00        M    6 (     1)                 NOP
0139-00 00        M    7 (     1)                 NOP
013A-             M    8          :60HZ
013A-                723
013A-92 9A           724 (   1/2)                 SBI     PORTD,2         Leave high for rest of the line
013B-18 95           725 (  4/5*)                 RETI
013C-                726
013C-                727
013C-                728          ;------------------------------------------------------------------------
013C-                729          ;  TOPLINES state
013C-                730          ;  During this state the empty lines at the top of the screen are drawn.
013C-                731          ;  The line time (approximately 54us) can be used for TTY purposes.
013C-                732          ;------------------------------------------------------------------------
013C-                733
013C-                734          TOPLINES        >HSYNC  2               Start with Hsync
013C-20 10        M    1 ( 1/2/3)                 CPSE    TTY_DELAY,ZERO  Is TTY delay running?
013D-2A 94        M    2 (     1)                 DEC     TTY_DELAY       Decrement if it is
013E-             M    3
0045-             M    4          DELAY           .SE     75-2-4         Number of clock pulses to waste
013E-07 E1        M    5 (     1)                 LDI     ACCA,#DELAY/3   Delay divided by loop time
013F-0A 95        M    6 (     1) :LOOP           DEC     ACCA            Waste time in loop
0140-F1 F7        M    7 (   1/2)                 BRNE    :LOOP           Not all time wasted yet!
0141-             M    8
0000-             M    9          DELAY           .SE     DELAY\3         How many single clocks left?
0141-             S   10                          .DO     DELAY>0
0141-             S   11                          NOP                     At least 1
0141-             S   12                          .DO     DELAY=2
0141-             S   13                          NOP                     No, two!
0141-             S   14                          .FI
0141-             M   15                          .FI
0141-             M   16
0141-92 9A           735 (   1/2)                 SBI     PORTD,2         End of Hsync, make high now
0142-                736
0142-8A 94           737 (     1)                 DEC     LINE_CNTR       All lines done?
0143-19 F4           738 (   1/2)                 BRNE    .SKIP           Nope!
0144-                739
0144-E9 E4           740 (     1)                 LDI     Z,#TEXTLINE     Next stop is the first text line
0145-F1 E0           741 (     1)                 LDI     Z+1,/TEXTLINE
0146-70 2C           742 (     1)                 MOV     SCAN_LINE,ZERO  Start at top of screen
0147-                743
0147-C8 D2           744 ( 2/3/4) .SKIP           RCALL   TTY             Handle TTY engine
0148-18 95           745 (  4/5*)                 RETI
0149-                746
0149-                747          ;------------------------------------------------------------------------
0149-                748          ;  TEXTLINE state
0149-                749          ;  During this state a line of the current text row is painted on the
0149-                750          ;  screen. This is extremely time critical, so we won't have time to do
0149-                751          ;  anything else!
0149-                752          ;------------------------------------------------------------------------
0149-                753
0149-                754          TEXTLINE        >HSYNC  2               Start with Hsync
0149-20 10        M    1 ( 1/2/3)                 CPSE    TTY_DELAY,ZERO  Is TTY delay running?
014A-2A 94        M    2 (     1)                 DEC     TTY_DELAY       Decrement if it is
014B-             M    3
0045-             M    4          DELAY           .SE     75-2-4         Number of clock pulses to waste
014B-07 E1        M    5 (     1)                 LDI     ACCA,#DELAY/3   Delay divided by loop time
014C-0A 95        M    6 (     1) :LOOP           DEC     ACCA            Waste time in loop
014D-F1 F7        M    7 (   1/2)                 BRNE    :LOOP           Not all time wasted yet!
014E-             M    8
0000-             M    9          DELAY           .SE     DELAY\3         How many single clocks left?
014E-             S   10                          .DO     DELAY>0
014E-             S   11                          NOP                     At least 1
014E-             S   12                          .DO     DELAY=2
014E-             S   13                          NOP                     No, two!
014E-             S   14                          .FI
014E-             M   15                          .FI
014E-             M   16
014E-92 9A           755 (   1/2)                 SBI     PORTD,2         End of Hsync, make high now
014F-                756
014F-                757                          >COMP5060               Compensate difference btwn 50/60
014F-10 14        M    1 (     1)                 CP      STANDARD,ZERO   50 or 60Hz?
0150-29 F0        M    2 (   1/2)                 BREQ    :60HZ
0151-00 00        M    3 (     1)                 NOP                     50Hz takes 4 clock pulses longer
0152-00 00        M    4 (     1)                 NOP                      (0.25us)
0153-00 00        M    5 (     1)                 NOP
0154-00 00        M    6 (     1)                 NOP
0155-00 00        M    7 (     1)                 NOP
0156-             M    8          :60HZ
0156-83 94           758 (     1)                 INC     LINE_CNTR       Use as MSB pntr in char table RAM
0157-                759
0157-08 E2           760 (     1)                 LDI     ACCA,#40        Horizontally centre text on
0158-0A 95           761 (     1) .DELAY          DEC     ACCA             screen
0159-F1 F7           762 (   1/2)                 BRNE    .DELAY
015A-                763
015A-C0 E4           764 (     1)                 LDI     Y,#ROW_ADDR     Calculate absolute address for
015B-D8 E0           765 (     1)                 LDI     Y+1,/ROW_ADDR    current text line
015C-07 2D           766 (     1)                 MOV     ACCA,SCAN_LINE  Point to proper text line
015D-06 0D           767 (     1)                 ADD     ACCA,FIRST_LINE
015E-08 31           768 (     1)                 CPI     ACCA,#LINE_MAX
015F-08 F0           769 (   1/2)                 BRLO    .SKIP           Not beyond max line!
0160-08 41           770 (     1)                 SBCI    ACCA,#LINE_MAX  Roll back if beyond (Same length!)
0161-C0 0F           771 (     1) .SKIP           ADD     Y,ACCA          Add row to address pntr (no Cy!)
0162-08 81           772 ( 1/2/3)                 LD      ACCA,Y
0163-C0 2F           773 (     1)                 MOV     Y,ACCA          Unpack address
0164-D0 2F           774 (     1)                 MOV     Y+1,ACCA
0165-C8 7F           775 (     1)                 ANDI    Y,#%1111.1000
0166-D7 70           776 (     1)                 ANDI    Y+1,#%0000.0111
0167-                777
0167-B8 2D           778 (     1)                 MOV     X+1,LINE_CNTR   Scan line of character pattern
0168-A9 91           779 ( 1/2/3)                 LD      X,Y+            Get first pattern of this line
0169-                780
0169-                781                          >CHAR                   Output 40 characters at top speed
0169-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
016A-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
016B-00 00        M    3 (     1)                 NOP
016C-06 95        M    4 (     1)                 LSR     ACCA
016D-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
016E-00 00        M    6 (     1)                 NOP
016F-06 95        M    7 (     1)                 LSR     ACCA
0170-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
0171-00 00        M    9 (     1)                 NOP
0172-06 95        M   10 (     1)                 LSR     ACCA
0173-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
0174-00 00        M   12 (     1)                 NOP
0175-06 95        M   13 (     1)                 LSR     ACCA
0176-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
0177-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
0178-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
0179-                782                          >CHAR                    No time to call for subroutines
0179-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
017A-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
017B-00 00        M    3 (     1)                 NOP
017C-06 95        M    4 (     1)                 LSR     ACCA
017D-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
017E-00 00        M    6 (     1)                 NOP
017F-06 95        M    7 (     1)                 LSR     ACCA
0180-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
0181-00 00        M    9 (     1)                 NOP
0182-06 95        M   10 (     1)                 LSR     ACCA
0183-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
0184-00 00        M   12 (     1)                 NOP
0185-06 95        M   13 (     1)                 LSR     ACCA
0186-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
0187-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
0188-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
0189-                783                          >CHAR                    Every single clock pulse
0189-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
018A-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
018B-00 00        M    3 (     1)                 NOP
018C-06 95        M    4 (     1)                 LSR     ACCA
018D-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
018E-00 00        M    6 (     1)                 NOP
018F-06 95        M    7 (     1)                 LSR     ACCA
0190-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
0191-00 00        M    9 (     1)                 NOP
0192-06 95        M   10 (     1)                 LSR     ACCA
0193-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
0194-00 00        M   12 (     1)                 NOP
0195-06 95        M   13 (     1)                 LSR     ACCA
0196-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
0197-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
0198-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
0199-                784                          >CHAR                     counts!
0199-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
019A-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
019B-00 00        M    3 (     1)                 NOP
019C-06 95        M    4 (     1)                 LSR     ACCA
019D-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
019E-00 00        M    6 (     1)                 NOP
019F-06 95        M    7 (     1)                 LSR     ACCA
01A0-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
01A1-00 00        M    9 (     1)                 NOP
01A2-06 95        M   10 (     1)                 LSR     ACCA
01A3-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
01A4-00 00        M   12 (     1)                 NOP
01A5-06 95        M   13 (     1)                 LSR     ACCA
01A6-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
01A7-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
01A8-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
01A9-                785                          >CHAR
01A9-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
01AA-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
01AB-00 00        M    3 (     1)                 NOP
01AC-06 95        M    4 (     1)                 LSR     ACCA
01AD-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
01AE-00 00        M    6 (     1)                 NOP
01AF-06 95        M    7 (     1)                 LSR     ACCA
01B0-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
01B1-00 00        M    9 (     1)                 NOP
01B2-06 95        M   10 (     1)                 LSR     ACCA
01B3-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
01B4-00 00        M   12 (     1)                 NOP
01B5-06 95        M   13 (     1)                 LSR     ACCA
01B6-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
01B7-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
01B8-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
01B9-                786                          >CHAR
01B9-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
01BA-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
01BB-00 00        M    3 (     1)                 NOP
01BC-06 95        M    4 (     1)                 LSR     ACCA
01BD-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
01BE-00 00        M    6 (     1)                 NOP
01BF-06 95        M    7 (     1)                 LSR     ACCA
01C0-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
01C1-00 00        M    9 (     1)                 NOP
01C2-06 95        M   10 (     1)                 LSR     ACCA
01C3-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
01C4-00 00        M   12 (     1)                 NOP
01C5-06 95        M   13 (     1)                 LSR     ACCA
01C6-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
01C7-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
01C8-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
01C9-                787                          >CHAR
01C9-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
01CA-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
01CB-00 00        M    3 (     1)                 NOP
01CC-06 95        M    4 (     1)                 LSR     ACCA
01CD-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
01CE-00 00        M    6 (     1)                 NOP
01CF-06 95        M    7 (     1)                 LSR     ACCA
01D0-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
01D1-00 00        M    9 (     1)                 NOP
01D2-06 95        M   10 (     1)                 LSR     ACCA
01D3-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
01D4-00 00        M   12 (     1)                 NOP
01D5-06 95        M   13 (     1)                 LSR     ACCA
01D6-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
01D7-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
01D8-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
01D9-                788                          >CHAR
01D9-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
01DA-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
01DB-00 00        M    3 (     1)                 NOP
01DC-06 95        M    4 (     1)                 LSR     ACCA
01DD-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
01DE-00 00        M    6 (     1)                 NOP
01DF-06 95        M    7 (     1)                 LSR     ACCA
01E0-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
01E1-00 00        M    9 (     1)                 NOP
01E2-06 95        M   10 (     1)                 LSR     ACCA
01E3-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
01E4-00 00        M   12 (     1)                 NOP
01E5-06 95        M   13 (     1)                 LSR     ACCA
01E6-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
01E7-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
01E8-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
01E9-                789                          >CHAR
01E9-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
01EA-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
01EB-00 00        M    3 (     1)                 NOP
01EC-06 95        M    4 (     1)                 LSR     ACCA
01ED-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
01EE-00 00        M    6 (     1)                 NOP
01EF-06 95        M    7 (     1)                 LSR     ACCA
01F0-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
01F1-00 00        M    9 (     1)                 NOP
01F2-06 95        M   10 (     1)                 LSR     ACCA
01F3-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
01F4-00 00        M   12 (     1)                 NOP
01F5-06 95        M   13 (     1)                 LSR     ACCA
01F6-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
01F7-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
01F8-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
01F9-                790                          >CHAR
01F9-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
01FA-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
01FB-00 00        M    3 (     1)                 NOP
01FC-06 95        M    4 (     1)                 LSR     ACCA
01FD-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
01FE-00 00        M    6 (     1)                 NOP
01FF-06 95        M    7 (     1)                 LSR     ACCA
0200-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
0201-00 00        M    9 (     1)                 NOP
0202-06 95        M   10 (     1)                 LSR     ACCA
0203-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
0204-00 00        M   12 (     1)                 NOP
0205-06 95        M   13 (     1)                 LSR     ACCA
0206-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
0207-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
0208-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
0209-                791
0209-                792                          >CHAR
0209-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
020A-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
020B-00 00        M    3 (     1)                 NOP
020C-06 95        M    4 (     1)                 LSR     ACCA
020D-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
020E-00 00        M    6 (     1)                 NOP
020F-06 95        M    7 (     1)                 LSR     ACCA
0210-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
0211-00 00        M    9 (     1)                 NOP
0212-06 95        M   10 (     1)                 LSR     ACCA
0213-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
0214-00 00        M   12 (     1)                 NOP
0215-06 95        M   13 (     1)                 LSR     ACCA
0216-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
0217-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
0218-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
0219-                793                          >CHAR
0219-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
021A-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
021B-00 00        M    3 (     1)                 NOP
021C-06 95        M    4 (     1)                 LSR     ACCA
021D-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
021E-00 00        M    6 (     1)                 NOP
021F-06 95        M    7 (     1)                 LSR     ACCA
0220-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
0221-00 00        M    9 (     1)                 NOP
0222-06 95        M   10 (     1)                 LSR     ACCA
0223-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
0224-00 00        M   12 (     1)                 NOP
0225-06 95        M   13 (     1)                 LSR     ACCA
0226-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
0227-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
0228-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
0229-                794                          >CHAR
0229-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
022A-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
022B-00 00        M    3 (     1)                 NOP
022C-06 95        M    4 (     1)                 LSR     ACCA
022D-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
022E-00 00        M    6 (     1)                 NOP
022F-06 95        M    7 (     1)                 LSR     ACCA
0230-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
0231-00 00        M    9 (     1)                 NOP
0232-06 95        M   10 (     1)                 LSR     ACCA
0233-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
0234-00 00        M   12 (     1)                 NOP
0235-06 95        M   13 (     1)                 LSR     ACCA
0236-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
0237-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
0238-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
0239-                795                          >CHAR
0239-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
023A-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
023B-00 00        M    3 (     1)                 NOP
023C-06 95        M    4 (     1)                 LSR     ACCA
023D-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
023E-00 00        M    6 (     1)                 NOP
023F-06 95        M    7 (     1)                 LSR     ACCA
0240-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
0241-00 00        M    9 (     1)                 NOP
0242-06 95        M   10 (     1)                 LSR     ACCA
0243-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
0244-00 00        M   12 (     1)                 NOP
0245-06 95        M   13 (     1)                 LSR     ACCA
0246-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
0247-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
0248-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
0249-                796                          >CHAR
0249-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
024A-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
024B-00 00        M    3 (     1)                 NOP
024C-06 95        M    4 (     1)                 LSR     ACCA
024D-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
024E-00 00        M    6 (     1)                 NOP
024F-06 95        M    7 (     1)                 LSR     ACCA
0250-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
0251-00 00        M    9 (     1)                 NOP
0252-06 95        M   10 (     1)                 LSR     ACCA
0253-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
0254-00 00        M   12 (     1)                 NOP
0255-06 95        M   13 (     1)                 LSR     ACCA
0256-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
0257-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
0258-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
0259-                797                          >CHAR
0259-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
025A-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
025B-00 00        M    3 (     1)                 NOP
025C-06 95        M    4 (     1)                 LSR     ACCA
025D-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
025E-00 00        M    6 (     1)                 NOP
025F-06 95        M    7 (     1)                 LSR     ACCA
0260-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
0261-00 00        M    9 (     1)                 NOP
0262-06 95        M   10 (     1)                 LSR     ACCA
0263-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
0264-00 00        M   12 (     1)                 NOP
0265-06 95        M   13 (     1)                 LSR     ACCA
0266-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
0267-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
0268-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
0269-                798                          >CHAR
0269-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
026A-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
026B-00 00        M    3 (     1)                 NOP
026C-06 95        M    4 (     1)                 LSR     ACCA
026D-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
026E-00 00        M    6 (     1)                 NOP
026F-06 95        M    7 (     1)                 LSR     ACCA
0270-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
0271-00 00        M    9 (     1)                 NOP
0272-06 95        M   10 (     1)                 LSR     ACCA
0273-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
0274-00 00        M   12 (     1)                 NOP
0275-06 95        M   13 (     1)                 LSR     ACCA
0276-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
0277-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
0278-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
0279-                799                          >CHAR
0279-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
027A-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
027B-00 00        M    3 (     1)                 NOP
027C-06 95        M    4 (     1)                 LSR     ACCA
027D-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
027E-00 00        M    6 (     1)                 NOP
027F-06 95        M    7 (     1)                 LSR     ACCA
0280-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
0281-00 00        M    9 (     1)                 NOP
0282-06 95        M   10 (     1)                 LSR     ACCA
0283-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
0284-00 00        M   12 (     1)                 NOP
0285-06 95        M   13 (     1)                 LSR     ACCA
0286-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
0287-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
0288-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
0289-                800                          >CHAR
0289-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
028A-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
028B-00 00        M    3 (     1)                 NOP
028C-06 95        M    4 (     1)                 LSR     ACCA
028D-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
028E-00 00        M    6 (     1)                 NOP
028F-06 95        M    7 (     1)                 LSR     ACCA
0290-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
0291-00 00        M    9 (     1)                 NOP
0292-06 95        M   10 (     1)                 LSR     ACCA
0293-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
0294-00 00        M   12 (     1)                 NOP
0295-06 95        M   13 (     1)                 LSR     ACCA
0296-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
0297-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
0298-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
0299-                801                          >CHAR
0299-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
029A-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
029B-00 00        M    3 (     1)                 NOP
029C-06 95        M    4 (     1)                 LSR     ACCA
029D-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
029E-00 00        M    6 (     1)                 NOP
029F-06 95        M    7 (     1)                 LSR     ACCA
02A0-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
02A1-00 00        M    9 (     1)                 NOP
02A2-06 95        M   10 (     1)                 LSR     ACCA
02A3-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
02A4-00 00        M   12 (     1)                 NOP
02A5-06 95        M   13 (     1)                 LSR     ACCA
02A6-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
02A7-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
02A8-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
02A9-                802
02A9-                803                          >CHAR
02A9-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
02AA-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
02AB-00 00        M    3 (     1)                 NOP
02AC-06 95        M    4 (     1)                 LSR     ACCA
02AD-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
02AE-00 00        M    6 (     1)                 NOP
02AF-06 95        M    7 (     1)                 LSR     ACCA
02B0-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
02B1-00 00        M    9 (     1)                 NOP
02B2-06 95        M   10 (     1)                 LSR     ACCA
02B3-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
02B4-00 00        M   12 (     1)                 NOP
02B5-06 95        M   13 (     1)                 LSR     ACCA
02B6-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
02B7-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
02B8-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
02B9-                804                          >CHAR
02B9-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
02BA-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
02BB-00 00        M    3 (     1)                 NOP
02BC-06 95        M    4 (     1)                 LSR     ACCA
02BD-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
02BE-00 00        M    6 (     1)                 NOP
02BF-06 95        M    7 (     1)                 LSR     ACCA
02C0-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
02C1-00 00        M    9 (     1)                 NOP
02C2-06 95        M   10 (     1)                 LSR     ACCA
02C3-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
02C4-00 00        M   12 (     1)                 NOP
02C5-06 95        M   13 (     1)                 LSR     ACCA
02C6-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
02C7-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
02C8-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
02C9-                805                          >CHAR
02C9-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
02CA-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
02CB-00 00        M    3 (     1)                 NOP
02CC-06 95        M    4 (     1)                 LSR     ACCA
02CD-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
02CE-00 00        M    6 (     1)                 NOP
02CF-06 95        M    7 (     1)                 LSR     ACCA
02D0-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
02D1-00 00        M    9 (     1)                 NOP
02D2-06 95        M   10 (     1)                 LSR     ACCA
02D3-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
02D4-00 00        M   12 (     1)                 NOP
02D5-06 95        M   13 (     1)                 LSR     ACCA
02D6-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
02D7-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
02D8-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
02D9-                806                          >CHAR
02D9-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
02DA-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
02DB-00 00        M    3 (     1)                 NOP
02DC-06 95        M    4 (     1)                 LSR     ACCA
02DD-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
02DE-00 00        M    6 (     1)                 NOP
02DF-06 95        M    7 (     1)                 LSR     ACCA
02E0-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
02E1-00 00        M    9 (     1)                 NOP
02E2-06 95        M   10 (     1)                 LSR     ACCA
02E3-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
02E4-00 00        M   12 (     1)                 NOP
02E5-06 95        M   13 (     1)                 LSR     ACCA
02E6-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
02E7-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
02E8-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
02E9-                807                          >CHAR
02E9-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
02EA-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
02EB-00 00        M    3 (     1)                 NOP
02EC-06 95        M    4 (     1)                 LSR     ACCA
02ED-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
02EE-00 00        M    6 (     1)                 NOP
02EF-06 95        M    7 (     1)                 LSR     ACCA
02F0-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
02F1-00 00        M    9 (     1)                 NOP
02F2-06 95        M   10 (     1)                 LSR     ACCA
02F3-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
02F4-00 00        M   12 (     1)                 NOP
02F5-06 95        M   13 (     1)                 LSR     ACCA
02F6-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
02F7-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
02F8-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
02F9-                808                          >CHAR
02F9-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
02FA-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
02FB-00 00        M    3 (     1)                 NOP
02FC-06 95        M    4 (     1)                 LSR     ACCA
02FD-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
02FE-00 00        M    6 (     1)                 NOP
02FF-06 95        M    7 (     1)                 LSR     ACCA
0300-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
0301-00 00        M    9 (     1)                 NOP
0302-06 95        M   10 (     1)                 LSR     ACCA
0303-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
0304-00 00        M   12 (     1)                 NOP
0305-06 95        M   13 (     1)                 LSR     ACCA
0306-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
0307-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
0308-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
0309-                809                          >CHAR
0309-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
030A-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
030B-00 00        M    3 (     1)                 NOP
030C-06 95        M    4 (     1)                 LSR     ACCA
030D-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
030E-00 00        M    6 (     1)                 NOP
030F-06 95        M    7 (     1)                 LSR     ACCA
0310-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
0311-00 00        M    9 (     1)                 NOP
0312-06 95        M   10 (     1)                 LSR     ACCA
0313-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
0314-00 00        M   12 (     1)                 NOP
0315-06 95        M   13 (     1)                 LSR     ACCA
0316-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
0317-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
0318-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
0319-                810                          >CHAR
0319-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
031A-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
031B-00 00        M    3 (     1)                 NOP
031C-06 95        M    4 (     1)                 LSR     ACCA
031D-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
031E-00 00        M    6 (     1)                 NOP
031F-06 95        M    7 (     1)                 LSR     ACCA
0320-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
0321-00 00        M    9 (     1)                 NOP
0322-06 95        M   10 (     1)                 LSR     ACCA
0323-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
0324-00 00        M   12 (     1)                 NOP
0325-06 95        M   13 (     1)                 LSR     ACCA
0326-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
0327-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
0328-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
0329-                811                          >CHAR
0329-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
032A-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
032B-00 00        M    3 (     1)                 NOP
032C-06 95        M    4 (     1)                 LSR     ACCA
032D-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
032E-00 00        M    6 (     1)                 NOP
032F-06 95        M    7 (     1)                 LSR     ACCA
0330-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
0331-00 00        M    9 (     1)                 NOP
0332-06 95        M   10 (     1)                 LSR     ACCA
0333-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
0334-00 00        M   12 (     1)                 NOP
0335-06 95        M   13 (     1)                 LSR     ACCA
0336-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
0337-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
0338-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
0339-                812                          >CHAR
0339-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
033A-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
033B-00 00        M    3 (     1)                 NOP
033C-06 95        M    4 (     1)                 LSR     ACCA
033D-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
033E-00 00        M    6 (     1)                 NOP
033F-06 95        M    7 (     1)                 LSR     ACCA
0340-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
0341-00 00        M    9 (     1)                 NOP
0342-06 95        M   10 (     1)                 LSR     ACCA
0343-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
0344-00 00        M   12 (     1)                 NOP
0345-06 95        M   13 (     1)                 LSR     ACCA
0346-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
0347-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
0348-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
0349-                813
0349-                814                          >CHAR
0349-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
034A-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
034B-00 00        M    3 (     1)                 NOP
034C-06 95        M    4 (     1)                 LSR     ACCA
034D-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
034E-00 00        M    6 (     1)                 NOP
034F-06 95        M    7 (     1)                 LSR     ACCA
0350-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
0351-00 00        M    9 (     1)                 NOP
0352-06 95        M   10 (     1)                 LSR     ACCA
0353-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
0354-00 00        M   12 (     1)                 NOP
0355-06 95        M   13 (     1)                 LSR     ACCA
0356-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
0357-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
0358-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
0359-                815                          >CHAR
0359-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
035A-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
035B-00 00        M    3 (     1)                 NOP
035C-06 95        M    4 (     1)                 LSR     ACCA
035D-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
035E-00 00        M    6 (     1)                 NOP
035F-06 95        M    7 (     1)                 LSR     ACCA
0360-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
0361-00 00        M    9 (     1)                 NOP
0362-06 95        M   10 (     1)                 LSR     ACCA
0363-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
0364-00 00        M   12 (     1)                 NOP
0365-06 95        M   13 (     1)                 LSR     ACCA
0366-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
0367-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
0368-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
0369-                816                          >CHAR
0369-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
036A-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
036B-00 00        M    3 (     1)                 NOP
036C-06 95        M    4 (     1)                 LSR     ACCA
036D-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
036E-00 00        M    6 (     1)                 NOP
036F-06 95        M    7 (     1)                 LSR     ACCA
0370-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
0371-00 00        M    9 (     1)                 NOP
0372-06 95        M   10 (     1)                 LSR     ACCA
0373-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
0374-00 00        M   12 (     1)                 NOP
0375-06 95        M   13 (     1)                 LSR     ACCA
0376-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
0377-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
0378-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
0379-                817                          >CHAR
0379-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
037A-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
037B-00 00        M    3 (     1)                 NOP
037C-06 95        M    4 (     1)                 LSR     ACCA
037D-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
037E-00 00        M    6 (     1)                 NOP
037F-06 95        M    7 (     1)                 LSR     ACCA
0380-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
0381-00 00        M    9 (     1)                 NOP
0382-06 95        M   10 (     1)                 LSR     ACCA
0383-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
0384-00 00        M   12 (     1)                 NOP
0385-06 95        M   13 (     1)                 LSR     ACCA
0386-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
0387-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
0388-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
0389-                818                          >CHAR
0389-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
038A-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
038B-00 00        M    3 (     1)                 NOP
038C-06 95        M    4 (     1)                 LSR     ACCA
038D-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
038E-00 00        M    6 (     1)                 NOP
038F-06 95        M    7 (     1)                 LSR     ACCA
0390-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
0391-00 00        M    9 (     1)                 NOP
0392-06 95        M   10 (     1)                 LSR     ACCA
0393-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
0394-00 00        M   12 (     1)                 NOP
0395-06 95        M   13 (     1)                 LSR     ACCA
0396-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
0397-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
0398-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
0399-                819                          >CHAR
0399-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
039A-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
039B-00 00        M    3 (     1)                 NOP
039C-06 95        M    4 (     1)                 LSR     ACCA
039D-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
039E-00 00        M    6 (     1)                 NOP
039F-06 95        M    7 (     1)                 LSR     ACCA
03A0-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
03A1-00 00        M    9 (     1)                 NOP
03A2-06 95        M   10 (     1)                 LSR     ACCA
03A3-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
03A4-00 00        M   12 (     1)                 NOP
03A5-06 95        M   13 (     1)                 LSR     ACCA
03A6-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
03A7-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
03A8-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
03A9-                820                          >CHAR
03A9-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
03AA-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
03AB-00 00        M    3 (     1)                 NOP
03AC-06 95        M    4 (     1)                 LSR     ACCA
03AD-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
03AE-00 00        M    6 (     1)                 NOP
03AF-06 95        M    7 (     1)                 LSR     ACCA
03B0-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
03B1-00 00        M    9 (     1)                 NOP
03B2-06 95        M   10 (     1)                 LSR     ACCA
03B3-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
03B4-00 00        M   12 (     1)                 NOP
03B5-06 95        M   13 (     1)                 LSR     ACCA
03B6-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
03B7-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
03B8-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
03B9-                821                          >CHAR
03B9-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
03BA-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
03BB-00 00        M    3 (     1)                 NOP
03BC-06 95        M    4 (     1)                 LSR     ACCA
03BD-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
03BE-00 00        M    6 (     1)                 NOP
03BF-06 95        M    7 (     1)                 LSR     ACCA
03C0-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
03C1-00 00        M    9 (     1)                 NOP
03C2-06 95        M   10 (     1)                 LSR     ACCA
03C3-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
03C4-00 00        M   12 (     1)                 NOP
03C5-06 95        M   13 (     1)                 LSR     ACCA
03C6-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
03C7-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
03C8-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
03C9-                822                          >CHAR
03C9-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
03CA-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
03CB-00 00        M    3 (     1)                 NOP
03CC-06 95        M    4 (     1)                 LSR     ACCA
03CD-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
03CE-00 00        M    6 (     1)                 NOP
03CF-06 95        M    7 (     1)                 LSR     ACCA
03D0-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
03D1-00 00        M    9 (     1)                 NOP
03D2-06 95        M   10 (     1)                 LSR     ACCA
03D3-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
03D4-00 00        M   12 (     1)                 NOP
03D5-06 95        M   13 (     1)                 LSR     ACCA
03D6-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
03D7-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
03D8-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
03D9-                823                          >CHAR
03D9-0D 91        M    1 ( 1/2/3)                 LD      ACCA,X+         Get character pattern
03DA-08 BB        M    2 (     1)                 OUT     PORTB,ACCA      Only used bit is b0
03DB-00 00        M    3 (     1)                 NOP
03DC-06 95        M    4 (     1)                 LSR     ACCA
03DD-08 BB        M    5 (     1)                 OUT     PORTB,ACCA
03DE-00 00        M    6 (     1)                 NOP
03DF-06 95        M    7 (     1)                 LSR     ACCA
03E0-08 BB        M    8 (     1)                 OUT     PORTB,ACCA
03E1-00 00        M    9 (     1)                 NOP
03E2-06 95        M   10 (     1)                 LSR     ACCA
03E3-08 BB        M   11 (     1)                 OUT     PORTB,ACCA
03E4-00 00        M   12 (     1)                 NOP
03E5-06 95        M   13 (     1)                 LSR     ACCA
03E6-08 BB        M   14 (     1)                 OUT     PORTB,ACCA
03E7-A9 91        M   15 ( 1/2/3)                 LD      X,Y+            Get next character from line
03E8-08 BA        M   16 (     1)                 OUT     PORTB,ZERO      Clear bit before output
03E9-                824
03E9-07 E0           825 (     1)                 LDI     ACCA,#7
03EA-80 16           826 (     1)                 CP      LINE_CNTR,ACCA  Last text line?
03EB-21 F4           827 (   1/2)                 BRNE    .RETI           Nope!
03EC-E1 EF           828 (     1)                 LDI     Z,#INTLINE      Next stop intermediate line
03ED-F3 E0           829 (     1)                 LDI     Z+1,/INTLINE
03EE-84 2C           830 (     1)                 MOV     LINE_CNTR,INTCOUNT Setup interm. line counter
03EF-73 94           831 (     1)                 INC     SCAN_LINE       Point to next scan row
03F0-                832
03F0-18 95           833 (  4/5*) .RETI           RETI
03F1-                834
03F1-                835
03F1-                836          ;------------------------------------------------------------------------
03F1-                837          ;  INTLINE state
03F1-                838          ;  During this state the empty lines between the rows of text are drawn.
03F1-                839          ;  The line time (approximately 54us) can be used for TTY purposes.
03F1-                840          ;------------------------------------------------------------------------
03F1-                841
03F1-                842          INTLINE         >HSYNC  2               Start with Hsync
03F1-20 10        M    1 ( 1/2/3)                 CPSE    TTY_DELAY,ZERO  Is TTY delay running?
03F2-2A 94        M    2 (     1)                 DEC     TTY_DELAY       Decrement if it is
03F3-             M    3
0045-             M    4          DELAY           .SE     75-2-4         Number of clock pulses to waste
03F3-07 E1        M    5 (     1)                 LDI     ACCA,#DELAY/3   Delay divided by loop time
03F4-0A 95        M    6 (     1) :LOOP           DEC     ACCA            Waste time in loop
03F5-F1 F7        M    7 (   1/2)                 BRNE    :LOOP           Not all time wasted yet!
03F6-             M    8
0000-             M    9          DELAY           .SE     DELAY\3         How many single clocks left?
03F6-             S   10                          .DO     DELAY>0
03F6-             S   11                          NOP                     At least 1
03F6-             S   12                          .DO     DELAY=2
03F6-             S   13                          NOP                     No, two!
03F6-             S   14                          .FI
03F6-             M   15                          .FI
03F6-             M   16
03F6-92 9A           843 (   1/2)                 SBI     PORTD,2         End of Hsync, make high now
03F7-                844
03F7-8A 94           845 (     1)                 DEC     LINE_CNTR       All lines done?
03F8-49 F4           846 (   1/2)                 BRNE    .TTY            Nope!
03F9-07 2D           847 (     1)                 MOV     ACCA,SCAN_LINE  All text rows done?
03FA-08 31           848 (     1)                 CPI     ACCA,#LINE_MAX
03FB-1C F4           849 (   1/2)                 BRGE    .DONE           Yes!
03FC-                850
03FC-E9 E4           851 (     1)                 LDI     Z,#TEXTLINE     Next stop is another row of text
03FD-F1 E0           852 (     1)                 LDI     Z+1,/TEXTLINE
03FE-03 C0           853 (     2)                 RJMP    .TTY
03FF-                854
03FF-E4 E0           855 (     1) .DONE           LDI     Z,#BOTTOMLINES     Next stop is the final state,
0400-F4 E0           856 (     1)                 LDI     Z+1,/BOTTOMLINES    the bottom blank lines
0401-85 2C           857 (     1)                 MOV     LINE_CNTR,BTMCOUNT  Setup number of lines there
0402-                858
0402-0D D0           859 ( 2/3/4) .TTY            RCALL   TTY             Do the TTY routines now
0403-18 95           860 (  4/5*)                 RETI
0404-                861
0404-                862
0404-                863          ;------------------------------------------------------------------------
0404-                864          ;  BOTTOMLINES state
0404-                865          ;  During this state the empty lines at the bottom of the screen are
0404-                866          ;  drawn.
0404-                867          ;  The line time (approximately 54us) can be used for TTY purposes.
0404-                868          ;------------------------------------------------------------------------
0404-                869
0404-                870          BOTTOMLINES     >HSYNC  2               Start with Hsync
0404-20 10        M    1 ( 1/2/3)                 CPSE    TTY_DELAY,ZERO  Is TTY delay running?
0405-2A 94        M    2 (     1)                 DEC     TTY_DELAY       Decrement if it is
0406-             M    3
0045-             M    4          DELAY           .SE     75-2-4         Number of clock pulses to waste
0406-07 E1        M    5 (     1)                 LDI     ACCA,#DELAY/3   Delay divided by loop time
0407-0A 95        M    6 (     1) :LOOP           DEC     ACCA            Waste time in loop
0408-F1 F7        M    7 (   1/2)                 BRNE    :LOOP           Not all time wasted yet!
0409-             M    8
0000-             M    9          DELAY           .SE     DELAY\3         How many single clocks left?
0409-             S   10                          .DO     DELAY>0
0409-             S   11                          NOP                     At least 1
0409-             S   12                          .DO     DELAY=2
0409-             S   13                          NOP                     No, two!
0409-             S   14                          .FI
0409-             M   15                          .FI
0409-             M   16
0409-92 9A           871 (   1/2)                 SBI     PORTD,2         End of Hsync, make high now
040A-                872
040A-8A 94           873 (     1)                 DEC     LINE_CNTR       All lines done?
040B-11 F4           874 (   1/2)                 BRNE    .SKIP           Nope!
040C-                875
040C-EA EB           876 (     1)                 LDI     Z,#VSYNC1       This was the last state. Next
040D-F0 E0           877 (     1)                 LDI     Z+1,/VSYNC1      stop is back to the Vsync
040E-01 D0           878 ( 2/3/4) .SKIP           RCALL   TTY             Handle TTY engine
040F-                879
040F-18 95           880 (  4/5*)                 RETI
0410-                881
0410-                882
0410-                883          ;------------------------------------------------------------------------
0410-                884          ;  TTY
0410-                885          ;  Main entry to the TTY engine
0410-                886          ;
0410-                887          ;  TTY state machine
0410-                888          ;  0  Idle mode, waiting for a key
0410-                889          ;  1  Splash screen mode, waiting for very first character
0410-                890          ;  2  Clear screen
0410-                891          ;  3  Scroll up
0410-                892          ;------------------------------------------------------------------------
0410-                893
0410-87 99           894 (2/3/4*) TTY             SBIC    PIND,7          Clear screen cmd from keyboard?
0411-04 C0           895 (     2)                 RJMP    .NOTCLR         Nope!
0412-                896
0412-02 E0           897 (     1)                 LDI     ACCA,#2         Set clear screen state
0413-90 2E           898 (     1)                 MOV     TTY_STATE,ACCA
0414-E0 2C           899 (     1)                 MOV     SUB_STATE,ZERO
0415-08 95           900 (  4/5*)                 RET                     Wait until end of request!
0416-                901
0416-09 2D           902 (     1) .NOTCLR         MOV     ACCA,TTY_STATE  Get current state
0417-00 30           903 (     1)                 CPI     ACCA,#0
0418-09 F4           904 (   1/2)                 BRNE    .NOT0
0419-08 C0           905 (     2)                 RJMP    TTY_IDLE        TTY Idle state
041A-                906
041A-0A 95           907 (     1) .NOT0           DEC     ACCA
041B-09 F4           908 (   1/2)                 BRNE    .NOT1
041C-39 C0           909 (     2)                 RJMP    TTY_SPLASH      Splash screen
041D-                910
041D-0A 95           911 (     1) .NOT1           DEC     ACCA
041E-09 F4           912 (   1/2)                 BRNE    .NOT2
041F-3D C0           913 (     2)                 RJMP    TTY_CLS         Clear screen
0420-                914
0420-                915          .NOT2
0420-90 2C           916 (     1)                 MOV     TTY_STATE,ZERO  Was illegal state, reset machine
0421-08 95           917 (  4/5*)                 RET
0422-                918
0422-                919
0422-                920          ;------------------------------------------------------------------------
0422-                921
0422-91 D0           922 ( 2/3/4) TTY_IDLE        RCALL   SERIAL          Handle serial output
0423-20 14           923 (     1)                 CP      TTY_DELAY,ZERO  Is it time to check for input?
0424-11 F0           924 (   1/2)                 BREQ    .CHECK_IN       Yes!
0425-                925
0425-C9 99           926 (2/3/4*)                 SBIC    PINA,1          Speed up during serial input?
0426-08 95           927 (  4/5*)                 RET                     Not necessary!
0427-                928
0427-84 9B           929 (2/3/4*) .CHECK_IN       SBIS    PIND,4          Is a character waiting?
0428-08 95           930 (  4/5*)                 RET                     Nope! Nothing to do here
0429-                931
0429-61 D0           932 ( 2/3/4)                 RCALL   CURSOR_POS      Get absolute cursor position
042A-00 E4           933 (     1)                 LDI     ACCA,#CURSOR    Was character under cursor
042B-0D 15           934 (     1)                 CP      ACCA,CURSOR_CHR  replaced?
042C-11 F0           935 (   1/2)                 BREQ    .GET_IN         No! No need to restore it then
042D-DC 92           936 (   1/2)                 ST      X,CURSOR_CHR    Restore character
042E-D0 2E           937 (     1)                 MOV     CURSOR_CHR,ACCA
042F-                938
042F-03 B3           939 (     1) .GET_IN         IN      ACCA,PINC       Get the character
0430-4F D0           940 ( 2/3/4)                 RCALL   PULSE_RDA       Signal acknowledge to Apple 1
0431-2A 94           941 (     1)                 DEC     TTY_DELAY       Restart TTY_DELAY (255)
0432-0D 30           942 (     1)                 CPI     ACCA,#CR        Is it carriage return?
0433-71 F0           943 (   1/2)                 BREQ    .CR             Yes! Special treatment
0434-                944
0434-                945                          .DO     CTRLL_OPT       Only do if Ctrl-L option enabled
0434-0C 30           946 (     1)                 CPI     ACCA,#CTRLL     Cntrl-L?
0435-D9 F0           947 (   1/2)                 BREQ    .CTRLL          Clear screen next time
0436-                948                          .FI
0436-                949
0436-0F 75           950 (     1)                 ANDI    ACCA,#%0101.1111 Ignore b5 like real Apple 1 does
0437-D0 2E           951 (     1)                 MOV     CURSOR_CHR,ACCA Save new character
0438-0C 93           952 (   1/2)                 ST      X,ACCA          Put new character on screen
0439-70 D0           953 ( 2/3/4)                 RCALL   SOUT            Send character to serial buffer
043A-00 E4           954 (     1)                 LDI     ACCA,#CURSOR    Set cursor character
043B-D0 2E           955 (     1)                 MOV     CURSOR_CHR,ACCA
043C-00 E1           956 (     1)                 LDI     ACCA,#CURSOR_RLD Restart cursor flash timer to
043D-C0 2E           957 (     1)                 MOV     CURSOR_TMR,ACCA   avoid artifacts during updates
043E-A3 94           958 (     1)                 INC     CH              Increment CH
043F-08 E2           959 (     1)                 LDI     ACCA,#LINE_LEN  End of line?
0440-0A 15           960 (     1)                 CP      ACCA,CH
0441-71 F4           961 (   1/2)                 BRNE    .RET            Nope! Done
0442-                962
0442-A0 2C           963 (     1) .CR             MOV     CH,ZERO         Reset CH
0443-B3 94           964 (     1)                 INC     CV              Increment CV
0444-08 E1           965 (     1)                 LDI     ACCA,#LINE_MAX
0445-0B 15           966 (     1)                 CP      ACCA,CV         Do we have to scroll?
0446-39 F4           967 (   1/2)                 BRNE    .SOUT0          Nope!
0447-                968
0447-BA 94           969 (     1)                 DEC     CV              Keep CV at bottom line
0448-52 D0           970 ( 2/3/4)                 RCALL   CLR_LINE        Clear (FIRST_LINE)
0449-63 94           971 (     1)                 INC     FIRST_LINE      Increment first line
044A-06 2D           972 (     1)                 MOV     ACCA,FIRST_LINE Beyond end of screen?
044B-08 31           973 (     1)                 CPI     ACCA,#LINE_MAX
044C-09 F4           974 (   1/2)                 BRNE    .SOUT0          Nope!
044D-60 2C           975 (     1)                 MOV     FIRST_LINE,ZERO Start all over again
044E-                976
044E-0D E0           977 (     1) .SOUT0          LDI     ACCA,#CR        Send CR to terminal
044F-5D D0           978 ( 2/3/4)                 RCALL   SOUT0
0450-08 95           979 (  4/5*) .RET            RET
0451-                980
0451-                981                          .DO     CTRLL_OPT       Only do if Ctrl-L option enabled
0451-5B D0           982 ( 2/3/4) .CTRLL          RCALL   SOUT0           Send Ctrl-L to serial output
0452-02 E0           983 (     1)                 LDI     ACCA,#2         Next stop is clear screen state
0453-90 2E           984 (     1)                 MOV     TTY_STATE,ACCA
0454-E0 2C           985 (     1)                 MOV     SUB_STATE,ZERO
0455-08 95           986 (  4/5*)                 RET
0456-                987                          .FI
0456-                988
0456-                989          ;------------------------------------------------------------------------
0456-                990
0456-84 9B           991 (2/3/4*) TTY_SPLASH      SBIS    PIND,4          Is a character waiting
0457-08 95           992 (  4/5*)                 RET                     Nope! We're already done
0458-                993
0458-03 B3           994 (     1)                 IN      ACCA,PINC       What character was it?
0459-0C 35           995 (     1)                 CPI     ACCA,#'\'
045A-09 F0           996 (   1/2)                 BREQ    .CLS            A backslash! Apple is running
045B-24 C0           997 (     2)                 RJMP    PULSE_RDA       Ignore this character
045C-                998
045C-E0 2C           999 (     1) .CLS            MOV     SUB_STATE,ZERO  Fall through to CLS routine
045D-               1000
045D-               1001          ;------------------------------------------------------------------------
045D-               1002
045D-02 E0          1003 (     1) TTY_CLS         LDI     ACCA,#2         Select clear screen state
045E-90 2E          1004 (     1)                 MOV     TTY_STATE,ACCA
045F-A0 E8          1005 (     1)                 LDI     X,#ROW0         Set pointers to clear the first
0460-B0 E0          1006 (     1)                 LDI     X+1,/ROW0        six lines
0461-C0 E8          1007 (     1)                 LDI     Y,#ROW3
0462-D1 E0          1008 (     1)                 LDI     Y+1,/ROW3
0463-E0 14          1009 (     1)                 CP      SUB_STATE,ZERO
0464-79 F0          1010 (   1/2)                 BREQ    .CLEAR          Do the first 6 lines!
0465-B2 E0          1011 (     1)                 LDI     X+1,/ROW6       Change pointers to next set of
0466-D3 E0          1012 (     1)                 LDI     Y+1,/ROW9        six lines
0467-0E 2D          1013 (     1)                 MOV     ACCA,SUB_STATE
0468-0A 95          1014 (     1)                 DEC     ACCA
0469-51 F0          1015 (   1/2)                 BREQ    .CLEAR          Do second set of 6 lines!
046A-B4 E0          1016 (     1)                 LDI     X+1,/ROW12      Change pointers to next set of
046B-D5 E0          1017 (     1)                 LDI     Y+1,/ROW15       six lines
046C-0A 95          1018 (     1)                 DEC     ACCA
046D-31 F0          1019 (   1/2)                 BREQ    .CLEAR          Do them!
046E-B6 E0          1020 (     1)                 LDI     X+1,/ROW18      Change pointers to do the last
046F-D7 E0          1021 (     1)                 LDI     Y+1,/ROW21       set of six lines
0470-A0 2C          1022 (     1)                 MOV     CH,ZERO         Set cursor in upper left corner
0471-B0 2C          1023 (     1)                 MOV     CV,ZERO
0472-60 2C          1024 (     1)                 MOV     FIRST_LINE,ZERO First line first
0473-90 2C          1025 (     1)                 MOV     TTY_STATE,ZERO  Next state is idle
0474-               1026
0474-00 E2          1027 (     1) .CLEAR          LDI     ACCA,#' '       Clear character
0475-18 E7          1028 (     1)                 LDI     ACCB,#3*40      Character counter (3 lines)
0476-               1029
0476-0D 93          1030 (   1/2) .LOOP           ST      X+,ACCA         Clear 1st row set
0477-09 93          1031 (   1/2)                 ST      Y+,ACCA         Clear 2nd row set
0478-1A 95          1032 (     1)                 DEC     ACCB
0479-E1 F7          1033 (   1/2)                 BRNE    .LOOP           Not done yet
047A-               1034
047A-E3 94          1035 (     1)                 INC     SUB_STATE       Do next row-set if we come back
047B-00 E1          1036 (     1)                 LDI     ACCA,#16        Enable cursor flash
047C-C0 2E          1037 (     1)                 MOV     CURSOR_TMR,ACCA
047D-00 E4          1038 (     1)                 LDI     ACCA,#CURSOR    Set proper cursor character
047E-D0 2E          1039 (     1)                 MOV     CURSOR_CHR,ACCA
047F-               1040
047F-08 95          1041 (  4/5*)                 RET
0480-               1042
0480-               1043
0480-               1044          ;------------------------------------------------------------------------
0480-               1045          ;  PULSE_RDA
0480-               1046          ;  Pulse the RDA line to signal that the character was accepted
0480-               1047          ;------------------------------------------------------------------------
0480-               1048
0480-93 98          1049 (   1/2) PULSE_RDA       CBI     PORTD,3         Make signal low
0481-00 00          1050 (     1)                 NOP
0482-00 00          1051 (     1)                 NOP
0483-00 00          1052 (     1)                 NOP
0484-00 00          1053 (     1)                 NOP
0485-00 00          1054 (     1)                 NOP
0486-00 00          1055 (     1)                 NOP
0487-00 00          1056 (     1)                 NOP
0488-00 00          1057 (     1)                 NOP
0489-93 9A          1058 (   1/2)                 SBI     PORTD,3
048A-08 95          1059 (  4/5*)                 RET
048B-               1060
048B-               1061
048B-               1062          ;------------------------------------------------------------------------
048B-               1063          ;  CURSOR_POS
048B-               1064          ;  Calculate absolute cursor position
048B-               1065          ;------------------------------------------------------------------------
048B-               1066
048B-A0 E4          1067 (     1) CURSOR_POS      LDI     X,#ROW_ADDR     Point to proper address in table
048C-B8 E0          1068 (     1)                 LDI     X+1,/ROW_ADDR
048D-0B 2D          1069 (     1)                 MOV     ACCA,CV         Add first line to CV
048E-06 0D          1070 (     1)                 ADD     ACCA,FIRST_LINE
048F-08 31          1071 (     1)                 CPI     ACCA,#LINE_MAX  Beyond last line?
0490-10 F0          1072 (   1/2)                 BRLO    .SKIP           Nope!
0491-88 94          1073 (     1)                 CLC                     Subtract last line to make it fit
0492-08 41          1074 (     1)                 SBCI    ACCA,#LINE_MAX
0493-A0 0F          1075 (     1) .SKIP           ADD     X,ACCA          Add to table pointer
0494-0C 91          1076 ( 1/2/3)                 LD      ACCA,X          Get packed address of line
0495-A0 2F          1077 (     1)                 MOV     X,ACCA           and unpack it
0496-B0 2F          1078 (     1)                 MOV     X+1,ACCA
0497-A8 7F          1079 (     1)                 ANDI    X,#%1111.1000
0498-B7 70          1080 (     1)                 ANDI    X+1,#%0000.0111
0499-AA 0D          1081 (     1)                 ADD     X,CH            Add horizontal cursor position
049A-08 95          1082 (  4/5*)                 RET
049B-               1083
049B-               1084
049B-               1085          ;------------------------------------------------------------------------
049B-               1086          ;  CLR_LINE
049B-               1087          ;  Clear FIRST_LINE for scroll purpose
049B-               1088          ;------------------------------------------------------------------------
049B-               1089
049B-C0 E4          1090 (     1) CLR_LINE        LDI     Y,#ROW_ADDR     Point to proper address in table
049C-D8 E0          1091 (     1)                 LDI     Y+1,/ROW_ADDR
049D-C6 0D          1092 (     1)                 ADD     Y,FIRST_LINE
049E-D0 1D          1093 (     1)                 ADC     Y+1,ZERO
049F-08 81          1094 ( 1/2/3)                 LD      ACCA,Y          Get packed value from table
04A0-C0 2F          1095 (     1)                 MOV     Y,ACCA          And move it and unpack it
04A1-D0 2F          1096 (     1)                 MOV     Y+1,ACCA
04A2-C8 7F          1097 (     1)                 ANDI    Y,#%1111.1000
04A3-D7 70          1098 (     1)                 ANDI    Y+1,#%0000.0111
04A4-00 E2          1099 (     1)                 LDI     ACCA,#' '       Fill line with spaces
04A5-18 E2          1100 (     1)                 LDI     ACCB,#40
04A6-               1101
04A6-09 93          1102 (   1/2) .LOOP           ST      Y+,ACCA
04A7-1A 95          1103 (     1)                 DEC     ACCB
04A8-E9 F7          1104 (   1/2)                 BRNE    .LOOP           Do all 40 characters!
04A9-08 95          1105 (  4/5*)                 RET
04AA-               1106
04AA-               1107
04AA-               1108          ;------------------------------------------------------------------------
04AA-               1109          ;  SOUT
04AA-               1110          ;------------------------------------------------------------------------
04AA-               1111
04AA-00 32          1112 (     1) SOUT            CPI     ACCA,#' '       Is it a control character?
04AB-08 F4          1113 (   1/2)                 BRSH    SOUT0           Nope!
04AC-00 62          1114 (     1)                 ORI     ACCA,#%0010.0000 Make it a printable character
04AD-               1115
04AD-A9 2F          1116 (     1) SOUT0           MOV     X,SOUT_TAIL     Prepare output buffer pointer
04AE-B8 E0          1117 (     1)                 LDI     X+1,/SOUT_BUFFER
04AF-0D 93          1118 (   1/2)                 ST      X+,ACCA         Save character to output buffer
04B0-AF 71          1119 (     1)                 ANDI    X,#%0001.1111   Wrap around if necessary
04B1-A8 17          1120 (     1)                 CP      X,SOUT_HEAD     Is buffer full?
04B2-09 F0          1121 (   1/2)                 BREQ    SERIAL          Yes! We've lost some characters!
04B3-9A 2F          1122 (     1)                 MOV     SOUT_TAIL,X     Save new pointer
04B4-               1123
04B4-               1124          ;------------------------------------------------------------------------
04B4-               1125          ;  SERIAL
04B4-               1126          ;------------------------------------------------------------------------
04B4-               1127
04B4-89 17          1128 (     1) SERIAL          CP      SOUT_HEAD,SOUT_TAIL Is there anything to send?
04B5-41 F0          1129 (   1/2)                 BREQ    .RET            Nope!
04B6-5D 9B          1130 (2/3/4*)                 SBIS    UCSRA,5         Is the output register empty?
04B7-06 C0          1131 (     2)                 RJMP    .RET            Nope!
04B8-A8 2F          1132 (     1)                 MOV     X,SOUT_HEAD     Prepare pointer to next character
04B9-B8 E0          1133 (     1)                 LDI     X+1,/SOUT_BUFFER
04BA-0D 91          1134 ( 1/2/3)                 LD      ACCA,X+         Get the character
04BB-0C B9          1135 (     1)                 OUT     UDR,ACCA         and send it out
04BC-AF 71          1136 (     1)                 ANDI    X,#%0001.1111   Wrap around if necessary
04BD-8A 2F          1137 (     1)                 MOV     SOUT_HEAD,X     Save new pointer
04BE-08 95          1138 (  4/5*) .RET            RET
04BF-               1139
04BF-               1140
04BF-               1141
04BF-               1142          ;------------------------------------------------------------------------
04BF-               1143          ;  CHAR_TABLE
04BF-               1144          ;
04BF-               1145          ;  This is a complete character table, even though the Apple 1 can't
04BF-               1146          ;  actually print lower case characters. However I've included lower case
04BF-               1147          ;  anyway so they can be used for the splash screen.
04BF-               1148          ;  The first 32 characters are actually non printable CTRL characters.
04BF-               1149          ;  To mimic the original Apple 1 behaviour I've copied the range from
04BF-               1150          ;  $20 to $3F into this block.
04BF-               1151          ;------------------------------------------------------------------------
04BF-               1152
04BF-00 -               1153          CHAR_TABLE      .DA     #%00000         sp $00
04BF-00             1154                          .DA     #%00000
04C0-00 -               1155                          .DA     #%00000
04C0-00             1156                          .DA     #%00000
04C1-00 -               1157                          .DA     #%00000
04C1-00             1158                          .DA     #%00000
04C2-00 -               1159                          .DA     #%00000
04C2-               1160
04C2-04             1161                          .DA     #%00100         !
04C3-04 -               1162                          .DA     #%00100
04C3-04             1163                          .DA     #%00100
04C4-04 -               1164                          .DA     #%00100
04C4-04             1165                          .DA     #%00100
04C5-00 -               1166                          .DA     #%00000
04C5-04             1167                          .DA     #%00100
04C6-               1168
04C6-0A -               1169                          .DA     #%01010         "
04C6-0A             1170                          .DA     #%01010
04C7-0A -               1171                          .DA     #%01010
04C7-00             1172                          .DA     #%00000
04C8-00 -               1173                          .DA     #%00000
04C8-00             1174                          .DA     #%00000
04C9-00 -               1175                          .DA     #%00000
04C9-               1176
04C9-0A             1177                          .DA     #%01010         #
04CA-0A -               1178                          .DA     #%01010
04CA-1F             1179                          .DA     #%11111
04CB-0A -               1180                          .DA     #%01010
04CB-1F             1181                          .DA     #%11111
04CC-0A -               1182                          .DA     #%01010
04CC-0A             1183                          .DA     #%01010
04CD-               1184
04CD-04 -               1185                          .DA     #%00100         $
04CD-1E             1186                          .DA     #%11110
04CE-05 -               1187                          .DA     #%00101
04CE-0E             1188                          .DA     #%01110
04CF-14 -               1189                          .DA     #%10100
04CF-0F             1190                          .DA     #%01111
04D0-04 -               1191                          .DA     #%00100
04D0-               1192
04D0-03             1193                          .DA     #%00011         %
04D1-13 -               1194                          .DA     #%10011
04D1-08             1195                          .DA     #%01000
04D2-04 -               1196                          .DA     #%00100
04D2-02             1197                          .DA     #%00010
04D3-19 -               1198                          .DA     #%11001
04D3-18             1199                          .DA     #%11000
04D4-               1200
04D4-02 -               1201                          .DA     #%00010         &
04D4-05             1202                          .DA     #%00101
04D5-05 -               1203                          .DA     #%00101
04D5-02             1204                          .DA     #%00010
04D6-15 -               1205                          .DA     #%10101
04D6-09             1206                          .DA     #%01001
04D7-16 -               1207                          .DA     #%10110
04D7-               1208
04D7-04             1209                          .DA     #%00100         '
04D8-04 -               1210                          .DA     #%00100
04D8-04             1211                          .DA     #%00100
04D9-00 -               1212                          .DA     #%00000
04D9-00             1213                          .DA     #%00000
04DA-00 -               1214                          .DA     #%00000
04DA-00             1215                          .DA     #%00000
04DB-               1216
04DB-04 -               1217                          .DA     #%00100         (
04DB-02             1218                          .DA     #%00010
04DC-01 -               1219                          .DA     #%00001
04DC-01             1220                          .DA     #%00001
04DD-01 -               1221                          .DA     #%00001
04DD-02             1222                          .DA     #%00010
04DE-04 -               1223                          .DA     #%00100
04DE-               1224
04DE-04             1225                          .DA     #%00100         )
04DF-08 -               1226                          .DA     #%01000
04DF-10             1227                          .DA     #%10000
04E0-10 -               1228                          .DA     #%10000
04E0-10             1229                          .DA     #%10000
04E1-08 -               1230                          .DA     #%01000
04E1-04             1231                          .DA     #%00100
04E2-               1232
04E2-04 -               1233                          .DA     #%00100         *
04E2-15             1234                          .DA     #%10101
04E3-0E -               1235                          .DA     #%01110
04E3-04             1236                          .DA     #%00100
04E4-0E -               1237                          .DA     #%01110
04E4-15             1238                          .DA     #%10101
04E5-04 -               1239                          .DA     #%00100
04E5-               1240
04E5-00             1241                          .DA     #%00000         +
04E6-04 -               1242                          .DA     #%00100
04E6-04             1243                          .DA     #%00100
04E7-1F -               1244                          .DA     #%11111
04E7-04             1245                          .DA     #%00100
04E8-04 -               1246                          .DA     #%00100
04E8-00             1247                          .DA     #%00000
04E9-               1248
04E9-00 -               1249                          .DA     #%00000         ,
04E9-00             1250                          .DA     #%00000
04EA-00 -               1251                          .DA     #%00000
04EA-00             1252                          .DA     #%00000
04EB-04 -               1253                          .DA     #%00100
04EB-04             1254                          .DA     #%00100
04EC-02 -               1255                          .DA     #%00010
04EC-               1256
04EC-00             1257                          .DA     #%00000         -
04ED-00 -               1258                          .DA     #%00000
04ED-00             1259                          .DA     #%00000
04EE-1F -               1260                          .DA     #%11111
04EE-00             1261                          .DA     #%00000
04EF-00 -               1262                          .DA     #%00000
04EF-00             1263                          .DA     #%00000
04F0-               1264
04F0-00 -               1265                          .DA     #%00000         .
04F0-00             1266                          .DA     #%00000
04F1-00 -               1267                          .DA     #%00000
04F1-00             1268                          .DA     #%00000
04F2-00 -               1269                          .DA     #%00000
04F2-00             1270                          .DA     #%00000
04F3-04 -               1271                          .DA     #%00100
04F3-               1272
04F3-00             1273                          .DA     #%00000         /
04F4-10 -               1274                          .DA     #%10000
04F4-08             1275                          .DA     #%01000
04F5-04 -               1276                          .DA     #%00100
04F5-02             1277                          .DA     #%00010
04F6-01 -               1278                          .DA     #%00001
04F6-00             1279                          .DA     #%00000
04F7-               1280
04F7-0E -               1281                          .DA     #%01110         0  $10
04F7-11             1282                          .DA     #%10001
04F8-19 -               1283                          .DA     #%11001
04F8-15             1284                          .DA     #%10101
04F9-13 -               1285                          .DA     #%10011
04F9-11             1286                          .DA     #%10001
04FA-0E -               1287                          .DA     #%01110
04FA-               1288
04FA-04             1289                          .DA     #%00100         1
04FB-06 -               1290                          .DA     #%00110
04FB-04             1291                          .DA     #%00100
04FC-04 -               1292                          .DA     #%00100
04FC-04             1293                          .DA     #%00100
04FD-04 -               1294                          .DA     #%00100
04FD-0E             1295                          .DA     #%01110
04FE-               1296
04FE-0E -               1297                          .DA     #%01110         2
04FE-11             1298                          .DA     #%10001
04FF-10 -               1299                          .DA     #%10000
04FF-0C             1300                          .DA     #%01100
0500-02 -               1301                          .DA     #%00010
0500-01             1302                          .DA     #%00001
0501-1F -               1303                          .DA     #%11111
0501-               1304
0501-1F             1305                          .DA     #%11111         3
0502-10 -               1306                          .DA     #%10000
0502-08             1307                          .DA     #%01000
0503-0C -               1308                          .DA     #%01100
0503-10             1309                          .DA     #%10000
0504-11 -               1310                          .DA     #%10001
0504-0E             1311                          .DA     #%01110
0505-               1312
0505-08 -               1313                          .DA     #%01000         4
0505-0C             1314                          .DA     #%01100
0506-0A -               1315                          .DA     #%01010
0506-09             1316                          .DA     #%01001
0507-1F -               1317                          .DA     #%11111
0507-08             1318                          .DA     #%01000
0508-08 -               1319                          .DA     #%01000
0508-               1320
0508-1F             1321                          .DA     #%11111         5
0509-01 -               1322                          .DA     #%00001
0509-0F             1323                          .DA     #%01111
050A-10 -               1324                          .DA     #%10000
050A-10             1325                          .DA     #%10000
050B-11 -               1326                          .DA     #%10001
050B-0E             1327                          .DA     #%01110
050C-               1328
050C-1C -               1329                          .DA     #%11100         6
050C-02             1330                          .DA     #%00010
050D-01 -               1331                          .DA     #%00001
050D-0F             1332                          .DA     #%01111
050E-11 -               1333                          .DA     #%10001
050E-11             1334                          .DA     #%10001
050F-0E -               1335                          .DA     #%01110
050F-               1336
050F-1F             1337                          .DA     #%11111         7
0510-10 -               1338                          .DA     #%10000
0510-08             1339                          .DA     #%01000
0511-04 -               1340                          .DA     #%00100
0511-02             1341                          .DA     #%00010
0512-02 -               1342                          .DA     #%00010
0512-02             1343                          .DA     #%00010
0513-               1344
0513-0E -               1345                          .DA     #%01110         8
0513-11             1346                          .DA     #%10001
0514-11 -               1347                          .DA     #%10001
0514-0E             1348                          .DA     #%01110
0515-11 -               1349                          .DA     #%10001
0515-11             1350                          .DA     #%10001
0516-0E -               1351                          .DA     #%01110
0516-               1352
0516-0E             1353                          .DA     #%01110         9
0517-11 -               1354                          .DA     #%10001
0517-11             1355                          .DA     #%10001
0518-1E -               1356                          .DA     #%11110
0518-10             1357                          .DA     #%10000
0519-08 -               1358                          .DA     #%01000
0519-07             1359                          .DA     #%00111
051A-               1360
051A-00 -               1361                          .DA     #%00000         :
051A-00             1362                          .DA     #%00000
051B-04 -               1363                          .DA     #%00100
051B-00             1364                          .DA     #%00000
051C-04 -               1365                          .DA     #%00100
051C-00             1366                          .DA     #%00000
051D-00 -               1367                          .DA     #%00000
051D-               1368
051D-00             1369                          .DA     #%00000         ;
051E-00 -               1370                          .DA     #%00000
051E-04             1371                          .DA     #%00100
051F-00 -               1372                          .DA     #%00000
051F-04             1373                          .DA     #%00100
0520-04 -               1374                          .DA     #%00100
0520-02             1375                          .DA     #%00010
0521-               1376
0521-08 -               1377                          .DA     #%01000         <
0521-04             1378                          .DA     #%00100
0522-02 -               1379                          .DA     #%00010
0522-01             1380                          .DA     #%00001
0523-02 -               1381                          .DA     #%00010
0523-04             1382                          .DA     #%00100
0524-08 -               1383                          .DA     #%01000
0524-               1384
0524-00             1385                          .DA     #%00000         =
0525-00 -               1386                          .DA     #%00000
0525-1F             1387                          .DA     #%11111
0526-00 -               1388                          .DA     #%00000
0526-1F             1389                          .DA     #%11111
0527-00 -               1390                          .DA     #%00000
0527-00             1391                          .DA     #%00000
0528-               1392
0528-02 -               1393                          .DA     #%00010         >
0528-04             1394                          .DA     #%00100
0529-08 -               1395                          .DA     #%01000
0529-10             1396                          .DA     #%10000
052A-08 -               1397                          .DA     #%01000
052A-04             1398                          .DA     #%00100
052B-02 -               1399                          .DA     #%00010
052B-               1400
052B-0E             1401                          .DA     #%01110         ?
052C-11 -               1402                          .DA     #%10001
052C-08             1403                          .DA     #%01000
052D-04 -               1404                          .DA     #%00100
052D-04             1405                          .DA     #%00100
052E-00 -               1406                          .DA     #%00000
052E-04             1407                          .DA     #%00100
052F-               1408
052F-00 -               1409                          .DA     #%00000         sp $20
052F-00             1410                          .DA     #%00000
0530-00 -               1411                          .DA     #%00000
0530-00             1412                          .DA     #%00000
0531-00 -               1413                          .DA     #%00000
0531-00             1414                          .DA     #%00000
0532-00 -               1415                          .DA     #%00000
0532-               1416
0532-04             1417                          .DA     #%00100         !
0533-04 -               1418                          .DA     #%00100
0533-04             1419                          .DA     #%00100
0534-04 -               1420                          .DA     #%00100
0534-04             1421                          .DA     #%00100
0535-00 -               1422                          .DA     #%00000
0535-04             1423                          .DA     #%00100
0536-               1424
0536-0A -               1425                          .DA     #%01010         "
0536-0A             1426                          .DA     #%01010
0537-0A -               1427                          .DA     #%01010
0537-00             1428                          .DA     #%00000
0538-00 -               1429                          .DA     #%00000
0538-00             1430                          .DA     #%00000
0539-00 -               1431                          .DA     #%00000
0539-               1432
0539-0A             1433                          .DA     #%01010         #
053A-0A -               1434                          .DA     #%01010
053A-1F             1435                          .DA     #%11111
053B-0A -               1436                          .DA     #%01010
053B-1F             1437                          .DA     #%11111
053C-0A -               1438                          .DA     #%01010
053C-0A             1439                          .DA     #%01010
053D-               1440
053D-04 -               1441                          .DA     #%00100         $
053D-1E             1442                          .DA     #%11110
053E-05 -               1443                          .DA     #%00101
053E-0E             1444                          .DA     #%01110
053F-14 -               1445                          .DA     #%10100
053F-0F             1446                          .DA     #%01111
0540-04 -               1447                          .DA     #%00100
0540-               1448
0540-03             1449                          .DA     #%00011         %
0541-13 -               1450                          .DA     #%10011
0541-08             1451                          .DA     #%01000
0542-04 -               1452                          .DA     #%00100
0542-02             1453                          .DA     #%00010
0543-19 -               1454                          .DA     #%11001
0543-18             1455                          .DA     #%11000
0544-               1456
0544-02 -               1457                          .DA     #%00010         &
0544-05             1458                          .DA     #%00101
0545-05 -               1459                          .DA     #%00101
0545-02             1460                          .DA     #%00010
0546-15 -               1461                          .DA     #%10101
0546-09             1462                          .DA     #%01001
0547-16 -               1463                          .DA     #%10110
0547-               1464
0547-04             1465                          .DA     #%00100         '
0548-04 -               1466                          .DA     #%00100
0548-04             1467                          .DA     #%00100
0549-00 -               1468                          .DA     #%00000
0549-00             1469                          .DA     #%00000
054A-00 -               1470                          .DA     #%00000
054A-00             1471                          .DA     #%00000
054B-               1472
054B-04 -               1473                          .DA     #%00100         (
054B-02             1474                          .DA     #%00010
054C-01 -               1475                          .DA     #%00001
054C-01             1476                          .DA     #%00001
054D-01 -               1477                          .DA     #%00001
054D-02             1478                          .DA     #%00010
054E-04 -               1479                          .DA     #%00100
054E-               1480
054E-04             1481                          .DA     #%00100         )
054F-08 -               1482                          .DA     #%01000
054F-10             1483                          .DA     #%10000
0550-10 -               1484                          .DA     #%10000
0550-10             1485                          .DA     #%10000
0551-08 -               1486                          .DA     #%01000
0551-04             1487                          .DA     #%00100
0552-               1488
0552-04 -               1489                          .DA     #%00100         *
0552-15             1490                          .DA     #%10101
0553-0E -               1491                          .DA     #%01110
0553-04             1492                          .DA     #%00100
0554-0E -               1493                          .DA     #%01110
0554-15             1494                          .DA     #%10101
0555-04 -               1495                          .DA     #%00100
0555-               1496
0555-00             1497                          .DA     #%00000         +
0556-04 -               1498                          .DA     #%00100
0556-04             1499                          .DA     #%00100
0557-1F -               1500                          .DA     #%11111
0557-04             1501                          .DA     #%00100
0558-04 -               1502                          .DA     #%00100
0558-00             1503                          .DA     #%00000
0559-               1504
0559-00 -               1505                          .DA     #%00000         ,
0559-00             1506                          .DA     #%00000
055A-00 -               1507                          .DA     #%00000
055A-00             1508                          .DA     #%00000
055B-04 -               1509                          .DA     #%00100
055B-04             1510                          .DA     #%00100
055C-02 -               1511                          .DA     #%00010
055C-               1512
055C-00             1513                          .DA     #%00000         -
055D-00 -               1514                          .DA     #%00000
055D-00             1515                          .DA     #%00000
055E-1F -               1516                          .DA     #%11111
055E-00             1517                          .DA     #%00000
055F-00 -               1518                          .DA     #%00000
055F-00             1519                          .DA     #%00000
0560-               1520
0560-00 -               1521                          .DA     #%00000         .
0560-00             1522                          .DA     #%00000
0561-00 -               1523                          .DA     #%00000
0561-00             1524                          .DA     #%00000
0562-00 -               1525                          .DA     #%00000
0562-00             1526                          .DA     #%00000
0563-04 -               1527                          .DA     #%00100
0563-               1528
0563-00             1529                          .DA     #%00000         /
0564-10 -               1530                          .DA     #%10000
0564-08             1531                          .DA     #%01000
0565-04 -               1532                          .DA     #%00100
0565-02             1533                          .DA     #%00010
0566-01 -               1534                          .DA     #%00001
0566-00             1535                          .DA     #%00000
0567-               1536
0567-0E -               1537                          .DA     #%01110         0  $30
0567-11             1538                          .DA     #%10001
0568-19 -               1539                          .DA     #%11001
0568-15             1540                          .DA     #%10101
0569-13 -               1541                          .DA     #%10011
0569-11             1542                          .DA     #%10001
056A-0E -               1543                          .DA     #%01110
056A-               1544
056A-04             1545                          .DA     #%00100         1
056B-06 -               1546                          .DA     #%00110
056B-04             1547                          .DA     #%00100
056C-04 -               1548                          .DA     #%00100
056C-04             1549                          .DA     #%00100
056D-04 -               1550                          .DA     #%00100
056D-0E             1551                          .DA     #%01110
056E-               1552
056E-0E -               1553                          .DA     #%01110         2
056E-11             1554                          .DA     #%10001
056F-10 -               1555                          .DA     #%10000
056F-0C             1556                          .DA     #%01100
0570-02 -               1557                          .DA     #%00010
0570-01             1558                          .DA     #%00001
0571-1F -               1559                          .DA     #%11111
0571-               1560
0571-1F             1561                          .DA     #%11111         3
0572-10 -               1562                          .DA     #%10000
0572-08             1563                          .DA     #%01000
0573-0C -               1564                          .DA     #%01100
0573-10             1565                          .DA     #%10000
0574-11 -               1566                          .DA     #%10001
0574-0E             1567                          .DA     #%01110
0575-               1568
0575-08 -               1569                          .DA     #%01000         4
0575-0C             1570                          .DA     #%01100
0576-0A -               1571                          .DA     #%01010
0576-09             1572                          .DA     #%01001
0577-1F -               1573                          .DA     #%11111
0577-08             1574                          .DA     #%01000
0578-08 -               1575                          .DA     #%01000
0578-               1576
0578-1F             1577                          .DA     #%11111         5
0579-01 -               1578                          .DA     #%00001
0579-0F             1579                          .DA     #%01111
057A-10 -               1580                          .DA     #%10000
057A-10             1581                          .DA     #%10000
057B-11 -               1582                          .DA     #%10001
057B-0E             1583                          .DA     #%01110
057C-               1584
057C-1C -               1585                          .DA     #%11100         6
057C-02             1586                          .DA     #%00010
057D-01 -               1587                          .DA     #%00001
057D-0F             1588                          .DA     #%01111
057E-11 -               1589                          .DA     #%10001
057E-11             1590                          .DA     #%10001
057F-0E -               1591                          .DA     #%01110
057F-               1592
057F-1F             1593                          .DA     #%11111         7
0580-10 -               1594                          .DA     #%10000
0580-08             1595                          .DA     #%01000
0581-04 -               1596                          .DA     #%00100
0581-02             1597                          .DA     #%00010
0582-02 -               1598                          .DA     #%00010
0582-02             1599                          .DA     #%00010
0583-               1600
0583-0E -               1601                          .DA     #%01110         8
0583-11             1602                          .DA     #%10001
0584-11 -               1603                          .DA     #%10001
0584-0E             1604                          .DA     #%01110
0585-11 -               1605                          .DA     #%10001
0585-11             1606                          .DA     #%10001
0586-0E -               1607                          .DA     #%01110
0586-               1608
0586-0E             1609                          .DA     #%01110         9
0587-11 -               1610                          .DA     #%10001
0587-11             1611                          .DA     #%10001
0588-1E -               1612                          .DA     #%11110
0588-10             1613                          .DA     #%10000
0589-08 -               1614                          .DA     #%01000
0589-07             1615                          .DA     #%00111
058A-               1616
058A-00 -               1617                          .DA     #%00000         :
058A-00             1618                          .DA     #%00000
058B-04 -               1619                          .DA     #%00100
058B-00             1620                          .DA     #%00000
058C-04 -               1621                          .DA     #%00100
058C-00             1622                          .DA     #%00000
058D-00 -               1623                          .DA     #%00000
058D-               1624
058D-00             1625                          .DA     #%00000         ;
058E-00 -               1626                          .DA     #%00000
058E-04             1627                          .DA     #%00100
058F-00 -               1628                          .DA     #%00000
058F-04             1629                          .DA     #%00100
0590-04 -               1630                          .DA     #%00100
0590-02             1631                          .DA     #%00010
0591-               1632
0591-08 -               1633                          .DA     #%01000         <
0591-04             1634                          .DA     #%00100
0592-02 -               1635                          .DA     #%00010
0592-01             1636                          .DA     #%00001
0593-02 -               1637                          .DA     #%00010
0593-04             1638                          .DA     #%00100
0594-08 -               1639                          .DA     #%01000
0594-               1640
0594-00             1641                          .DA     #%00000         =
0595-00 -               1642                          .DA     #%00000
0595-1F             1643                          .DA     #%11111
0596-00 -               1644                          .DA     #%00000
0596-1F             1645                          .DA     #%11111
0597-00 -               1646                          .DA     #%00000
0597-00             1647                          .DA     #%00000
0598-               1648
0598-02 -               1649                          .DA     #%00010         >
0598-04             1650                          .DA     #%00100
0599-08 -               1651                          .DA     #%01000
0599-10             1652                          .DA     #%10000
059A-08 -               1653                          .DA     #%01000
059A-04             1654                          .DA     #%00100
059B-02 -               1655                          .DA     #%00010
059B-               1656
059B-0E             1657                          .DA     #%01110         ?
059C-11 -               1658                          .DA     #%10001
059C-08             1659                          .DA     #%01000
059D-04 -               1660                          .DA     #%00100
059D-04             1661                          .DA     #%00100
059E-00 -               1662                          .DA     #%00000
059E-04             1663                          .DA     #%00100
059F-               1664
059F-0E -               1665                          .DA     #%01110         @  $40
059F-11             1666                          .DA     #%10001
05A0-15 -               1667                          .DA     #%10101
05A0-1D             1668                          .DA     #%11101
05A1-0D -               1669                          .DA     #%01101
05A1-01             1670                          .DA     #%00001
05A2-1E -               1671                          .DA     #%11110
05A2-               1672
05A2-04             1673                          .DA     #%00100         A
05A3-0A -               1674                          .DA     #%01010
05A3-11             1675                          .DA     #%10001
05A4-11 -               1676                          .DA     #%10001
05A4-1F             1677                          .DA     #%11111
05A5-11 -               1678                          .DA     #%10001
05A5-11             1679                          .DA     #%10001
05A6-               1680
05A6-0F -               1681                          .DA     #%01111         B
05A6-11             1682                          .DA     #%10001
05A7-11 -               1683                          .DA     #%10001
05A7-0F             1684                          .DA     #%01111
05A8-11 -               1685                          .DA     #%10001
05A8-11             1686                          .DA     #%10001
05A9-0F -               1687                          .DA     #%01111
05A9-               1688
05A9-0E             1689                          .DA     #%01110         C
05AA-11 -               1690                          .DA     #%10001
05AA-01             1691                          .DA     #%00001
05AB-01 -               1692                          .DA     #%00001
05AB-01             1693                          .DA     #%00001
05AC-11 -               1694                          .DA     #%10001
05AC-0E             1695                          .DA     #%01110
05AD-               1696
05AD-0F -               1697                          .DA     #%01111         D
05AD-11             1698                          .DA     #%10001
05AE-11 -               1699                          .DA     #%10001
05AE-11             1700                          .DA     #%10001
05AF-11 -               1701                          .DA     #%10001
05AF-11             1702                          .DA     #%10001
05B0-0F -               1703                          .DA     #%01111
05B0-               1704
05B0-1F             1705                          .DA     #%11111         E
05B1-01 -               1706                          .DA     #%00001
05B1-01             1707                          .DA     #%00001
05B2-0F -               1708                          .DA     #%01111
05B2-01             1709                          .DA     #%00001
05B3-01 -               1710                          .DA     #%00001
05B3-1F             1711                          .DA     #%11111
05B4-               1712
05B4-1F -               1713                          .DA     #%11111         F
05B4-01             1714                          .DA     #%00001
05B5-01 -               1715                          .DA     #%00001
05B5-0F             1716                          .DA     #%01111
05B6-01 -               1717                          .DA     #%00001
05B6-01             1718                          .DA     #%00001
05B7-01 -               1719                          .DA     #%00001
05B7-               1720
05B7-1E             1721                          .DA     #%11110         G
05B8-01 -               1722                          .DA     #%00001
05B8-01             1723                          .DA     #%00001
05B9-01 -               1724                          .DA     #%00001
05B9-19             1725                          .DA     #%11001
05BA-11 -               1726                          .DA     #%10001
05BA-1E             1727                          .DA     #%11110
05BB-               1728
05BB-11 -               1729                          .DA     #%10001         H
05BB-11             1730                          .DA     #%10001
05BC-11 -               1731                          .DA     #%10001
05BC-1F             1732                          .DA     #%11111
05BD-11 -               1733                          .DA     #%10001
05BD-11             1734                          .DA     #%10001
05BE-11 -               1735                          .DA     #%10001
05BE-               1736
05BE-0E             1737                          .DA     #%01110         I
05BF-04 -               1738                          .DA     #%00100
05BF-04             1739                          .DA     #%00100
05C0-04 -               1740                          .DA     #%00100
05C0-04             1741                          .DA     #%00100
05C1-04 -               1742                          .DA     #%00100
05C1-0E             1743                          .DA     #%01110
05C2-               1744
05C2-10 -               1745                          .DA     #%10000         J
05C2-10             1746                          .DA     #%10000
05C3-10 -               1747                          .DA     #%10000
05C3-10             1748                          .DA     #%10000
05C4-10 -               1749                          .DA     #%10000
05C4-11             1750                          .DA     #%10001
05C5-0E -               1751                          .DA     #%01110
05C5-               1752
05C5-11             1753                          .DA     #%10001         K
05C6-09 -               1754                          .DA     #%01001
05C6-05             1755                          .DA     #%00101
05C7-03 -               1756                          .DA     #%00011
05C7-05             1757                          .DA     #%00101
05C8-09 -               1758                          .DA     #%01001
05C8-11             1759                          .DA     #%10001
05C9-               1760
05C9-01 -               1761                          .DA     #%00001         L
05C9-01             1762                          .DA     #%00001
05CA-01 -               1763                          .DA     #%00001
05CA-01             1764                          .DA     #%00001
05CB-01 -               1765                          .DA     #%00001
05CB-01             1766                          .DA     #%00001
05CC-1F -               1767                          .DA     #%11111
05CC-               1768
05CC-11             1769                          .DA     #%10001         M
05CD-1B -               1770                          .DA     #%11011
05CD-15             1771                          .DA     #%10101
05CE-15 -               1772                          .DA     #%10101
05CE-11             1773                          .DA     #%10001
05CF-11 -               1774                          .DA     #%10001
05CF-11             1775                          .DA     #%10001
05D0-               1776
05D0-11 -               1777                          .DA     #%10001         N
05D0-11             1778                          .DA     #%10001
05D1-13 -               1779                          .DA     #%10011
05D1-15             1780                          .DA     #%10101
05D2-19 -               1781                          .DA     #%11001
05D2-11             1782                          .DA     #%10001
05D3-11 -               1783                          .DA     #%10001
05D3-               1784
05D3-0E             1785                          .DA     #%01110         O
05D4-11 -               1786                          .DA     #%10001
05D4-11             1787                          .DA     #%10001
05D5-11 -               1788                          .DA     #%10001
05D5-11             1789                          .DA     #%10001
05D6-11 -               1790                          .DA     #%10001
05D6-0E             1791                          .DA     #%01110
05D7-               1792
05D7-0F -               1793                          .DA     #%01111         P  $50
05D7-11             1794                          .DA     #%10001
05D8-11 -               1795                          .DA     #%10001
05D8-0F             1796                          .DA     #%01111
05D9-01 -               1797                          .DA     #%00001
05D9-01             1798                          .DA     #%00001
05DA-01 -               1799                          .DA     #%00001
05DA-               1800
05DA-0E             1801                          .DA     #%01110         Q
05DB-11 -               1802                          .DA     #%10001
05DB-11             1803                          .DA     #%10001
05DC-11 -               1804                          .DA     #%10001
05DC-15             1805                          .DA     #%10101
05DD-09 -               1806                          .DA     #%01001
05DD-16             1807                          .DA     #%10110
05DE-               1808
05DE-0F -               1809                          .DA     #%01111         R
05DE-11             1810                          .DA     #%10001
05DF-11 -               1811                          .DA     #%10001
05DF-0F             1812                          .DA     #%01111
05E0-05 -               1813                          .DA     #%00101
05E0-09             1814                          .DA     #%01001
05E1-11 -               1815                          .DA     #%10001
05E1-               1816
05E1-0E             1817                          .DA     #%01110         S
05E2-11 -               1818                          .DA     #%10001
05E2-01             1819                          .DA     #%00001
05E3-0E -               1820                          .DA     #%01110
05E3-10             1821                          .DA     #%10000
05E4-11 -               1822                          .DA     #%10001
05E4-0E             1823                          .DA     #%01110
05E5-               1824
05E5-1F -               1825                          .DA     #%11111         T
05E5-04             1826                          .DA     #%00100
05E6-04 -               1827                          .DA     #%00100
05E6-04             1828                          .DA     #%00100
05E7-04 -               1829                          .DA     #%00100
05E7-04             1830                          .DA     #%00100
05E8-04 -               1831                          .DA     #%00100
05E8-               1832
05E8-11             1833                          .DA     #%10001         U
05E9-11 -               1834                          .DA     #%10001
05E9-11             1835                          .DA     #%10001
05EA-11 -               1836                          .DA     #%10001
05EA-11             1837                          .DA     #%10001
05EB-11 -               1838                          .DA     #%10001
05EB-0E             1839                          .DA     #%01110
05EC-               1840
05EC-11 -               1841                          .DA     #%10001         V
05EC-11             1842                          .DA     #%10001
05ED-11 -               1843                          .DA     #%10001
05ED-11             1844                          .DA     #%10001
05EE-11 -               1845                          .DA     #%10001
05EE-0A             1846                          .DA     #%01010
05EF-04 -               1847                          .DA     #%00100
05EF-               1848
05EF-11             1849                          .DA     #%10001         W
05F0-11 -               1850                          .DA     #%10001
05F0-11             1851                          .DA     #%10001
05F1-15 -               1852                          .DA     #%10101
05F1-15             1853                          .DA     #%10101
05F2-1B -               1854                          .DA     #%11011
05F2-11             1855                          .DA     #%10001
05F3-               1856
05F3-11 -               1857                          .DA     #%10001         X
05F3-11             1858                          .DA     #%10001
05F4-0A -               1859                          .DA     #%01010
05F4-04             1860                          .DA     #%00100
05F5-0A -               1861                          .DA     #%01010
05F5-11             1862                          .DA     #%10001
05F6-11 -               1863                          .DA     #%10001
05F6-               1864
05F6-11             1865                          .DA     #%10001         Y
05F7-11 -               1866                          .DA     #%10001
05F7-0A             1867                          .DA     #%01010
05F8-04 -               1868                          .DA     #%00100
05F8-04             1869                          .DA     #%00100
05F9-04 -               1870                          .DA     #%00100
05F9-04             1871                          .DA     #%00100
05FA-               1872
05FA-1F -               1873                          .DA     #%11111         Z
05FA-10             1874                          .DA     #%10000
05FB-08 -               1875                          .DA     #%01000
05FB-04             1876                          .DA     #%00100
05FC-02 -               1877                          .DA     #%00010
05FC-01             1878                          .DA     #%00001
05FD-1F -               1879                          .DA     #%11111
05FD-               1880
05FD-1F             1881                          .DA     #%11111         [
05FE-03 -               1882                          .DA     #%00011
05FE-03             1883                          .DA     #%00011
05FF-03 -               1884                          .DA     #%00011
05FF-03             1885                          .DA     #%00011
0600-03 -               1886                          .DA     #%00011
0600-1F             1887                          .DA     #%11111
0601-               1888
0601-00 -               1889                          .DA     #%00000         \
0601-01             1890                          .DA     #%00001
0602-02 -               1891                          .DA     #%00010
0602-04             1892                          .DA     #%00100
0603-08 -               1893                          .DA     #%01000
0603-10             1894                          .DA     #%10000
0604-00 -               1895                          .DA     #%00000
0604-               1896
0604-1F             1897                          .DA     #%11111         ]
0605-18 -               1898                          .DA     #%11000
0605-18             1899                          .DA     #%11000
0606-18 -               1900                          .DA     #%11000
0606-18             1901                          .DA     #%11000
0607-18 -               1902                          .DA     #%11000
0607-1F             1903                          .DA     #%11111
0608-               1904
0608-00 -               1905                          .DA     #%00000         ^
0608-00             1906                          .DA     #%00000
0609-04 -               1907                          .DA     #%00100
0609-0A             1908                          .DA     #%01010
060A-11 -               1909                          .DA     #%10001
060A-00             1910                          .DA     #%00000
060B-00 -               1911                          .DA     #%00000
060B-               1912
060B-00             1913                          .DA     #%00000         _
060C-00 -               1914                          .DA     #%00000
060C-00             1915                          .DA     #%00000
060D-00 -               1916                          .DA     #%00000
060D-00             1917                          .DA     #%00000
060E-00 -               1918                          .DA     #%00000
060E-1F             1919                          .DA     #%11111
060F-               1920
060F-04 -               1921                          .DA     #%00100         `
060F-04             1922                          .DA     #%00100
0610-08 -               1923                          .DA     #%01000
0610-00             1924                          .DA     #%00000
0611-00 -               1925                          .DA     #%00000
0611-00             1926                          .DA     #%00000
0612-00 -               1927                          .DA     #%00000
0612-               1928
0612-00             1929                          .DA     #%00000         a
0613-00 -               1930                          .DA     #%00000
0613-0E             1931                          .DA     #%01110
0614-10 -               1932                          .DA     #%10000
0614-1E             1933                          .DA     #%11110
0615-11 -               1934                          .DA     #%10001
0615-1E             1935                          .DA     #%11110
0616-               1936
0616-01 -               1937                          .DA     #%00001         b
0616-01             1938                          .DA     #%00001
0617-01 -               1939                          .DA     #%00001
0617-0F             1940                          .DA     #%01111
0618-11 -               1941                          .DA     #%10001
0618-11             1942                          .DA     #%10001
0619-0F -               1943                          .DA     #%01111
0619-               1944
0619-00             1945                          .DA     #%00000         c
061A-00 -               1946                          .DA     #%00000
061A-1E             1947                          .DA     #%11110
061B-01 -               1948                          .DA     #%00001
061B-01             1949                          .DA     #%00001
061C-01 -               1950                          .DA     #%00001
061C-1E             1951                          .DA     #%11110
061D-               1952
061D-10 -               1953                          .DA     #%10000         d
061D-10             1954                          .DA     #%10000
061E-10 -               1955                          .DA     #%10000
061E-1E             1956                          .DA     #%11110
061F-11 -               1957                          .DA     #%10001
061F-11             1958                          .DA     #%10001
0620-1E -               1959                          .DA     #%11110
0620-               1960
0620-00             1961                          .DA     #%00000         e
0621-00 -               1962                          .DA     #%00000
0621-0E             1963                          .DA     #%01110
0622-11 -               1964                          .DA     #%10001
0622-0F             1965                          .DA     #%01111
0623-01 -               1966                          .DA     #%00001
0623-1E             1967                          .DA     #%11110
0624-               1968
0624-0C -               1969                          .DA     #%01100         f
0624-12             1970                          .DA     #%10010
0625-02 -               1971                          .DA     #%00010
0625-07             1972                          .DA     #%00111
0626-02 -               1973                          .DA     #%00010
0626-02             1974                          .DA     #%00010
0627-02 -               1975                          .DA     #%00010
0627-               1976
0627-00             1977                          .DA     #%00000         g
0628-1E -               1978                          .DA     #%11110
0628-11             1979                          .DA     #%10001
0629-11 -               1980                          .DA     #%10001
0629-1E             1981                          .DA     #%11110
062A-10 -               1982                          .DA     #%10000
062A-0E             1983                          .DA     #%01110
062B-               1984
062B-01 -               1985                          .DA     #%00001         h
062B-01             1986                          .DA     #%00001
062C-01 -               1987                          .DA     #%00001
062C-0F             1988                          .DA     #%01111
062D-11 -               1989                          .DA     #%10001
062D-11             1990                          .DA     #%10001
062E-11 -               1991                          .DA     #%10001
062E-               1992
062E-04             1993                          .DA     #%00100         i
062F-00 -               1994                          .DA     #%00000
062F-06             1995                          .DA     #%00110
0630-04 -               1996                          .DA     #%00100
0630-04             1997                          .DA     #%00100
0631-04 -               1998                          .DA     #%00100
0631-0E             1999                          .DA     #%01110
0632-               2000
0632-08 -               2001                          .DA     #%01000         j
0632-00             2002                          .DA     #%00000
0633-08 -               2003                          .DA     #%01000
0633-08             2004                          .DA     #%01000
0634-08 -               2005                          .DA     #%01000
0634-09             2006                          .DA     #%01001
0635-06 -               2007                          .DA     #%00110
0635-               2008
0635-01             2009                          .DA     #%00001         k
0636-01 -               2010                          .DA     #%00001
0636-09             2011                          .DA     #%01001
0637-05 -               2012                          .DA     #%00101
0637-03             2013                          .DA     #%00011
0638-05 -               2014                          .DA     #%00101
0638-09             2015                          .DA     #%01001
0639-               2016
0639-06 -               2017                          .DA     #%00110         l
0639-04             2018                          .DA     #%00100
063A-04 -               2019                          .DA     #%00100
063A-04             2020                          .DA     #%00100
063B-04 -               2021                          .DA     #%00100
063B-04             2022                          .DA     #%00100
063C-0E -               2023                          .DA     #%01110
063C-               2024
063C-00             2025                          .DA     #%00000         m
063D-00 -               2026                          .DA     #%00000
063D-0B             2027                          .DA     #%01011
063E-15 -               2028                          .DA     #%10101
063E-15             2029                          .DA     #%10101
063F-15 -               2030                          .DA     #%10101
063F-15             2031                          .DA     #%10101
0640-               2032
0640-00 -               2033                          .DA     #%00000         n
0640-00             2034                          .DA     #%00000
0641-0D -               2035                          .DA     #%01101
0641-13             2036                          .DA     #%10011
0642-11 -               2037                          .DA     #%10001
0642-11             2038                          .DA     #%10001
0643-11 -               2039                          .DA     #%10001
0643-               2040
0643-00             2041                          .DA     #%00000         o
0644-00 -               2042                          .DA     #%00000
0644-0E             2043                          .DA     #%01110
0645-11 -               2044                          .DA     #%10001
0645-11             2045                          .DA     #%10001
0646-11 -               2046                          .DA     #%10001
0646-0E             2047                          .DA     #%01110
0647-               2048
0647-00 -               2049                          .DA     #%00000         p  $70
0647-0F             2050                          .DA     #%01111
0648-11 -               2051                          .DA     #%10001
0648-0F             2052                          .DA     #%01111
0649-01 -               2053                          .DA     #%00001
0649-01             2054                          .DA     #%00001
064A-01 -               2055                          .DA     #%00001
064A-               2056
064A-00             2057                          .DA     #%00000         q
064B-1E -               2058                          .DA     #%11110
064B-11             2059                          .DA     #%10001
064C-1E -               2060                          .DA     #%11110
064C-10             2061                          .DA     #%10000
064D-10 -               2062                          .DA     #%10000
064D-10             2063                          .DA     #%10000
064E-               2064
064E-00 -               2065                          .DA     #%00000         r
064E-00             2066                          .DA     #%00000
064F-0D -               2067                          .DA     #%01101
064F-03             2068                          .DA     #%00011
0650-01 -               2069                          .DA     #%00001
0650-01             2070                          .DA     #%00001
0651-01 -               2071                          .DA     #%00001
0651-               2072
0651-00             2073                          .DA     #%00000         s
0652-00 -               2074                          .DA     #%00000
0652-1E             2075                          .DA     #%11110
0653-01 -               2076                          .DA     #%00001
0653-0E             2077                          .DA     #%01110
0654-10 -               2078                          .DA     #%10000
0654-0F             2079                          .DA     #%01111
0655-               2080
0655-02 -               2081                          .DA     #%00010         t
0655-02             2082                          .DA     #%00010
0656-07 -               2083                          .DA     #%00111
0656-02             2084                          .DA     #%00010
0657-02 -               2085                          .DA     #%00010
0657-12             2086                          .DA     #%10010
0658-0C -               2087                          .DA     #%01100
0658-               2088
0658-00             2089                          .DA     #%00000         u
0659-00 -               2090                          .DA     #%00000
0659-11             2091                          .DA     #%10001
065A-11 -               2092                          .DA     #%10001
065A-11             2093                          .DA     #%10001
065B-11 -               2094                          .DA     #%10001
065B-0E             2095                          .DA     #%01110
065C-               2096
065C-00 -               2097                          .DA     #%00000         v
065C-00             2098                          .DA     #%00000
065D-11 -               2099                          .DA     #%10001
065D-11             2100                          .DA     #%10001
065E-11 -               2101                          .DA     #%10001
065E-0A             2102                          .DA     #%01010
065F-04 -               2103                          .DA     #%00100
065F-               2104
065F-00             2105                          .DA     #%00000         w
0660-00 -               2106                          .DA     #%00000
0660-11             2107                          .DA     #%10001
0661-11 -               2108                          .DA     #%10001
0661-15             2109                          .DA     #%10101
0662-15 -               2110                          .DA     #%10101
0662-0A             2111                          .DA     #%01010
0663-               2112
0663-00 -               2113                          .DA     #%00000         x
0663-00             2114                          .DA     #%00000
0664-11 -               2115                          .DA     #%10001
0664-0A             2116                          .DA     #%01010
0665-04 -               2117                          .DA     #%00100
0665-0A             2118                          .DA     #%01010
0666-11 -               2119                          .DA     #%10001
0666-               2120
0666-00             2121                          .DA     #%00000         y
0667-11 -               2122                          .DA     #%10001
0667-11             2123                          .DA     #%10001
0668-0A -               2124                          .DA     #%01010
0668-04             2125                          .DA     #%00100
0669-04 -               2126                          .DA     #%00100
0669-04             2127                          .DA     #%00100
066A-               2128
066A-00 -               2129                          .DA     #%00000         z
066A-00             2130                          .DA     #%00000
066B-1F -               2131                          .DA     #%11111
066B-08             2132                          .DA     #%01000
066C-04 -               2133                          .DA     #%00100
066C-02             2134                          .DA     #%00010
066D-1F -               2135                          .DA     #%11111
066D-               2136
066D-0C             2137                          .DA     #%01100         {
066E-02 -               2138                          .DA     #%00010
066E-02             2139                          .DA     #%00010
066F-01 -               2140                          .DA     #%00001
066F-02             2141                          .DA     #%00010
0670-02 -               2142                          .DA     #%00010
0670-0C             2143                          .DA     #%01100
0671-               2144
0671-04 -               2145                          .DA     #%00100         |
0671-04             2146                          .DA     #%00100
0672-04 -               2147                          .DA     #%00100
0672-00             2148                          .DA     #%00000
0673-04 -               2149                          .DA     #%00100
0673-04             2150                          .DA     #%00100
0674-04 -               2151                          .DA     #%00100
0674-               2152
0674-06             2153                          .DA     #%00110         }
0675-08 -               2154                          .DA     #%01000
0675-08             2155                          .DA     #%01000
0676-10 -               2156                          .DA     #%10000
0676-08             2157                          .DA     #%01000
0677-08 -               2158                          .DA     #%01000
0677-06             2159                          .DA     #%00110
0678-               2160
0678-0A -               2161                          .DA     #%01010         ~
0678-05             2162                          .DA     #%00101
0679-00 -               2163                          .DA     #%00000
0679-00             2164                          .DA     #%00000
067A-00 -               2165                          .DA     #%00000
067A-00             2166                          .DA     #%00000
067B-00 -               2167                          .DA     #%00000
067B-               2168
067B-1F             2169                          .DA     #%11111         block
067C-1F -               2170                          .DA     #%11111
067C-1F             2171                          .DA     #%11111
067D-1F -               2172                          .DA     #%11111
067D-1F             2173                          .DA     #%11111
067E-1F -               2174                          .DA     #%11111
067E-1F             2175                          .DA     #%11111
067F-               2176
067F-               2177          ;------------------------------------------------------------------------
067F-               2178          ;  ROM_ROW
067F-               2179          ;  Text Row addresses
067F-               2180          ;------------------------------------------------------------------------
067F-               2181
067F-80 -               2182          ROM_ROW         .DA     #0+$80          Row 0
067F-A8             2183                          .DA     #0+$A8          Row 1
0680-D0 -               2184                          .DA     #0+$D0          Row 2
0680-81             2185                          .DA     #1+$80          Row 3
0681-A9 -               2186                          .DA     #1+$A8          Row 4
0681-D1             2187                          .DA     #1+$D0          Row 5
0682-82 -               2188                          .DA     #2+$80          Row 6
0682-AA             2189                          .DA     #2+$A8          Row 7
0683-D2 -               2190                          .DA     #2+$D0          Row 8
0683-83             2191                          .DA     #3+$80          Row 9
0684-AB -               2192                          .DA     #3+$A8          Row 10
0684-D3             2193                          .DA     #3+$D0          Row 11
0685-84 -               2194                          .DA     #4+$80          Row 12
0685-AC             2195                          .DA     #4+$A8          Row 13
0686-D4 -               2196                          .DA     #4+$D0          Row 14
0686-85             2197                          .DA     #5+$80          Row 15
0687-AD -               2198                          .DA     #5+$A8          Row 16
0687-D5             2199                          .DA     #5+$D0          Row 17
0688-86 -               2200                          .DA     #6+$80          Row 18
0688-AE             2201                          .DA     #6+$A8          Row 19
0689-D6 -               2202                          .DA     #6+$D0          Row 20
0689-87             2203                          .DA     #7+$80          Row 21
068A-AF -               2204                          .DA     #7+$A8          Row 22
068A-D7             2205                          .DA     #7+$D0          Row 23
068B-               2206
068B-               2207          ;------------------------------------------------------------------------
068B-               2208          ;  SPLASH_TXT
068B-               2209          ;  Splash screen content
068B-               2210          ;------------------------------------------------------------------------
068B-               2211
068B-2B 20 20 20 
     20 20 20 20 
     20 20 41 50 
     50 4C 45 20 
     31 20 20 20 
     20 20 20 20 
     20 41 2D 4F 
     4E 45 20 20 
     20 20 20 20 
     20 20 20 2B    2212          SPLASH_TXT      .AS     "+         APPLE 1        A-ONE         +"    1
069F-20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20    2213                          .AS     "                                        "    2
06B3-20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20    2214                          .AS     "                                        "    3
06C7-20 20 20 20 
     20 20 4F 72 
     69 67 69 6E 
     61 6C 20 41 
     70 70 6C 65 
     20 31 20 64 
     65 73 69 67 
     6E 3A 20 20 
     20 20 20 20 
     20 20 20 20    2215                          .AS     "      Original Apple 1 design:          "    4
06DB-20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20    2216                          .AS     "                                        "    5
06EF-20 20 20 20 
     20 20 20 20 
     53 74 65 76 
     65 20 57 6F 
     7A 6E 69 61 
     6B 20 20 20 
     31 39 37 35 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20    2217                          .AS     "        Steve Wozniak   1975            "    6
0703-20 20 20 20 
     20 20 20 20 
     77 77 77 2E 
     77 6F 7A 2E 
     6F 72 67 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20    2218                          .AS     "        www.woz.org                     "    7
0717-20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20    2219                          .AS     "                                        "    8
072B-20 20 20 20 
     20 20 41 2D 
     4F 6E 65 20 
     68 61 72 64 
     77 61 72 65 
     20 64 65 73 
     69 67 6E 3A 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20    2220                          .AS     "      A-One hardware design:            "    9
073F-20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20    2221                          .AS     "                                        "   10
0753-20 20 20 20 
     20 20 20 20 
     46 72 61 6E 
     7A 20 41 63 
     68 61 74 7A 
     20 20 20 20 
     32 30 30 36 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20    2222                          .AS     "        Franz Achatz    2006            "   11
0767-20 20 20 20 
     20 20 20 20 
     77 77 77 2E 
     61 63 68 61 
     74 7A 2E 6E 
     6C 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20    2223                          .AS     "        www.achatz.nl                   "   12
077B-20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20    2224                          .AS     "                                        "   13
078F-20 20 20 20 
     20 20 56 69 
     64 65 6F 20 
     63 6F 6E 74 
     72 6F 6C 6C 
     65 72 20 73 
     6F 66 74 77 
     61 72 65 3A 
     20 20 20 20 
     20 20 20 20    2225                          .AS     "      Video controller software:        "   14
07A3-20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20    2226                          .AS     "                                        "   15
07B7-20 20 20 20 
     20 20 20 20 
     53 61 6E 20 
     42 65 72 67 
     6D 61 6E 73 
     20 20 20 20 
     32 30 30 36 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20    2227                          .AS     "        San Bergmans    2006            "   16
07CB-20 20 20 20 
     20 20 20 20 
     77 77 77 2E 
     73 62 70 72 
     6F 6A 65 63 
     74 73 2E 6E 
     65 74 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20    2228                          .AS     "        www.sbprojects.net              "   17
07DF-20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20    2229                          .AS     "                                        "   18
07F3-20 20 20 20 
     20 20 4B 65 
     79 62 6F 61 
     72 64 20 63 
     6F 6E 74 72 
     6F 6C 6C 65 
     72 20 73 6F 
     66 74 77 61 
     72 65 3A 20 
     20 20 20 20    2230                          .AS     "      Keyboard controller software:     "   19
0807-20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20    2231                          .AS     "                                        "   20
081B-20 20 20 20 
     20 20 20 20 
     42 65 6E 20 
     5A 69 6A 6C 
     73 74 72 61 
     20 20 20 20 
     32 30 30 36 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20    2232                          .AS     "        Ben Zijlstra    2006            "   21
082F-20 20 20 20 
     20 20 20 20 
     77 77 77 2E 
     62 65 6E 73 
     68 6F 62 62 
     79 63 6F 72 
     6E 65 72 2E 
     74 6B 20 20 
     20 20 20 20 
     20 20 20 20    2233                          .AS     "        www.benshobbycorner.tk          "   22
0843-20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20 
     20 20 20 20    2234                          .AS     "                                        "   23
0857-2B 20 20 50 
     6C 65 61 73 
     65 20 70 72 
     65 73 73 20 
     52 45 53 45 
     54 20 74 6F 
     20 67 65 74 
     20 73 74 61 
     72 74 65 64 
     2E 20 20 2B    2235                          .AS     "+  Please press RESET to get started.  +"   24
086B-               2236
